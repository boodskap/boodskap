proxy_cache_path /tmp/NGINX_cache/ keys_zone=backcache:10m;

map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
}

upstream api_cluster {
    server platform01:18080;
    server platform02:18080;
}

upstream mservice_cluster {
    server platform01:19090;
    server platform02:19090;
}

upstream mqttws_cluster {
    server emqx01:8083;
    server emqx02:8083;
}

upstream ui_cluster {
    server ui01:4201;
    server ui02:4201;
}

#upstream dashboard_cluster {
#    server dashboard01:10000;
#    server dashboard02:10000;
#}

server {
    listen 80;
    server_name 127.0.0.1 localhost boodskap.xyz;
    client_max_body_size 128M;

    location /api {

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' '604800' always;

        if ($request_method = OPTIONS) {
          return 204;
        }

        if ($request_method !~ ^(HEAD|GET|POST|PUT|DELETE)$ ){
          return 405;
        }

        proxy_pass http://api_cluster;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_cache backcache;
        proxy_buffer_size          256M;
        proxy_buffers              4 512M;
        proxy_busy_buffers_size    512M;
    }

    location /mservice {

        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' '*' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Access-Control-Allow-Credentials' 'true' always;
        add_header 'Access-Control-Max-Age' '604800' always;

        if ($request_method = OPTIONS) {
          return 204;
        }

        if ($request_method !~ ^(HEAD|GET|POST|PUT|DELETE)$ ){
          return 405;
        }

        proxy_pass http://mservice_cluster;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_cache backcache;
        proxy_buffer_size          256M;
        proxy_buffers              4 512M;
        proxy_busy_buffers_size    512M;
    }

    location /mqtt {
        proxy_pass http://mqttws_cluster;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_redirect  off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_cache backcache;
    }

    location /console {
        proxy_pass http://ui_cluster;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-NginX-Proxy true;
        proxy_ssl_session_reuse off;
        proxy_cache backcache;
        proxy_buffer_size          256M;
        proxy_buffers              4 512M;
        proxy_busy_buffers_size    512M;
    }

 #   location /dashboard {
 #       proxy_pass http://dashboard_cluster;
 #       proxy_set_header Host $host;
 #       proxy_set_header X-Real-IP $remote_addr;
 #       proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
 #       proxy_set_header X-NginX-Proxy true;
 #       proxy_ssl_session_reuse off;
 #       proxy_cache backcache;
 #       proxy_buffer_size          256M;
 #       proxy_buffers              4 512M;
 #       proxy_busy_buffers_size    512M;
 #   }

    location / {
	return 302 /console;
    }
}
