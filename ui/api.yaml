swagger: "2.0"
basePath: /api
schemes: 
  - https
  - http
produces: 
  - "application/json"
info: 
  version: "4.6.0-03"
  title: "Boodskap API"
  description: "Boodskap IoT Platform API"
  termsOfService: "https://boodskap.io/terms-conditions"
  contact: 
    name: "Boodskap Team"
  license: 
    name: "MIT"
paths:
  '/asset/upsert/{atoken}':
    post:
      tags:
        - Asset
      summary: Create / Update Asset
      operationId: upsertAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Asset JSON object
          required: true
          schema:
            $ref: '#/definitions/Asset'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/get/{atoken}/{aid}':
    get:
      tags:
        - Asset
      summary: Retreive Asset
      operationId: getAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/delete/{atoken}/{aid}':
    delete:
      tags:
        - Asset
      summary: Delete Asset
      operationId: deleteAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/deleteall/{atoken}':
    delete:
      tags:
        - Asset
      summary: Delete All Assets
      operationId: deleteAllAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/list/{atoken}/{pageSize}':
    get:
      tags:
        - Asset
      summary: List Assets
      operationId: listAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **aid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: aid
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Asset
      summary: Search Assets
      operationId: searchAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/link/{atoken}/{aid}/{did}':
    get:
      tags:
        - Asset
      summary: Link an Asset with a Device
      operationId: linkAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
        - name: did
          in: path
          description: Device Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/unlink/{atoken}/{aid}/{did}':
    get:
      tags:
        - Asset
      summary: Unlink an Asset from a Device
      operationId: unlinkAsset
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
        - name: did
          in: path
          description: Device Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/listdevices/{atoken}/{aid}':
    get:
      tags:
        - Asset
      summary: List Asset Devices
      operationId: listAssetDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/upsert/{atoken}':
    post:
      tags:
        - Asset Property
      summary: Create / Update Asset Property
      operationId: storeAssetProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: AssetProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/AssetProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/get/{atoken}/{id}/{name}':
    get:
      tags:
        - Asset Property
      summary: Retreive Asset Property
      operationId: getAssetProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssetProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/delete/{atoken}/{id}/{name}':
    delete:
      tags:
        - Asset Property
      summary: Delete Stored Asset Property
      operationId: deleteAssetProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/property/list/{atoken}/{id}/{pageSize}':
    get:
      tags:
        - Asset Property
      summary: List Asset Properties
      operationId: listAssetProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AssetProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/upsert/{atoken}':
    post:
      tags:
        - Asset Group
      summary: Create / Update Asset Group
      operationId: upsertAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: AssetGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/AssetGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/get/{atoken}/{aid}/{gid}':
    get:
      tags:
        - Asset Group
      summary: Retreive Asset Group
      operationId: getAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/add/{atoken}/{oaid}/{gid}':
    post:
      tags:
        - Asset Group
      summary: Add Members(s) to Asset Group
      operationId: addMembersToAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: oaid
          in: path
          description: Owner Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: assetIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/remove/{atoken}/{oaid}/{gid}':
    post:
      tags:
        - Asset Group
      summary: Remove Members(s) from Asset Group
      operationId: removeMembersFromAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: oaid
          in: path
          description: Owner Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/delete/{atoken}/{aid}/{gid}':
    delete:
      tags:
        - Asset Group
      summary: Delete Asset Group
      operationId: deleteAssetGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/deleteall/{atoken}/{aid}':
    delete:
      tags:
        - Asset Group
      summary: Delete All Asset Groups
      operationId: deleteAllAssetGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/list/{atoken}/{aid}/{pageSize}':
    get:
      tags:
        - Asset Group
      summary: List Asset Groups
      operationId: listAssetGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/listmembers/{atoken}/{oaid}/{gid}/{pageSize}':
    get:
      tags:
        - Asset Group
      summary: List Asset Group Members
      operationId: listAssetGroupMembers
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: oaid
          in: path
          description: Owner Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **aid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: aid
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/upsert/{atoken}':
    post:
      tags:
        - Asset Group
      summary: Create / Update Asset Group Property
      operationId: storeAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: AssetGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/AssetGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/get/{atoken}/{id}/{gid}/{name}':
    get:
      tags:
        - Asset Group
      summary: Retreive Asset Group Property
      operationId: getAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Asset Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/AssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/delete/{atoken}/{id}/{gid}/{name}':
    delete:
      tags:
        - Asset Group
      summary: Delete Stored Asset Group Property
      operationId: deleteAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Asset Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/property/list/{atoken}/{id}/{gid}/{pageSize}':
    get:
      tags:
        - Asset Group
      summary: List Asset Group Properties
      operationId: listAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Asset Group ID
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/AssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/count/{atoken}':
    post:
      tags:
        - Asset
      summary: Count All Assets
      operationId: countAllAssets
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/asset/group/count/{atoken}/{assetId}':
    post:
      tags:
        - Asset Group
      summary: Count All Asset Groups
      operationId: countAllAssetGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: assetId
          in: path
          description: Asset ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/register/{atoken}/{did}/{model}/{version}':
    get:
      tags:
        - Device
      summary: Register New Device
      operationId: registerDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: model
          in: path
          description: Device model id
          required: true
          type: string
        - name: version
          in: path
          description: Firmware version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/upsert/{atoken}':
    post:
      tags:
        - Device
      summary: Create / Update Device
      operationId: upsertDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: User JSON object
          required: true
          schema:
            $ref: '#/definitions/Device'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/get/{atoken}/{did}':
    get:
      tags:
        - Device
      summary: Retreive Device
      operationId: getDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/delete/{atoken}/{did}':
    delete:
      tags:
        - Device
      summary: Delete Device
      operationId: deleteDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/list/{atoken}/{pageSize}':
    get:
      tags:
        - Device
      summary: List Devices
      operationId: listDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/fcm/list/{atoken}/{pageSize}':
    get:
      tags:
        - FCM Device
      summary: List FCM Devices
      operationId: listFCMDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of FCM devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FCMDevice'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/upsert/{atoken}':
    post:
      tags:
        - Device Group
      summary: Create / Update Device Group
      operationId: upsertDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: DeviceGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/get/{atoken}/{did}/{gid}':
    get:
      tags:
        - Device Group
      summary: Retreive Device Group
      operationId: getDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/add/{atoken}/{odid}/{gid}':
    post:
      tags:
        - Device Group
      summary: Add Members(s) to Device Group
      operationId: addMembersToDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: odid
          in: path
          description: Owner Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/remove/{atoken}/{odid}/{gid}':
    post:
      tags:
        - Device Group
      summary: Remove Members(s) from Device Group
      operationId: removeMembersFromDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: odid
          in: path
          description: Owner Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/delete/{atoken}/{did}/{gid}':
    delete:
      tags:
        - Device Group
      summary: Delete Device Group
      operationId: deleteDeviceGroup
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/list/{atoken}/{did}/{pageSize}':
    get:
      tags:
        - Device Group
      summary: List Device Groups
      operationId: listDeviceGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/listmembers/{atoken}/{odid}/{gid}/{pageSize}':
    get:
      tags:
        - Device Group
      summary: List Device Group Members
      operationId: listDeviceGroupMembers
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: odid
          in: path
          description: Owner Deive ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/upsert/{atoken}':
    post:
      tags:
        - Device Property
      summary: Create / Update Device Property
      operationId: storeDeviceProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/get/{atoken}/{did}/{name}':
    get:
      tags:
        - Device Property
      summary: Retreive Device Property
      operationId: getDeviceProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/delete/{atoken}/{did}/{name}':
    delete:
      tags:
        - Device Property
      summary: Delete Stored Device Property
      operationId: deleteDeviceProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/property/list/{atoken}/{did}/{pageSize}':
    get:
      tags:
        - Device Property
      summary: List Device Properties
      operationId: listDeviceProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/upsert/{atoken}':
    post:
      tags:
        - Device Group Property
      summary: Create / Update Device Group Property
      operationId: storeDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/get/{atoken}/{did}/{gid}/{name}':
    get:
      tags:
        - Device Group Property
      summary: Retreive Device Group Property
      operationId: getDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Device Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/delete/{atoken}/{did}/{gid}/{name}':
    delete:
      tags:
        - Device Group Property
      summary: Delete Stored Device Group Property
      operationId: deleteDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Device Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/property/list/{atoken}/{did}/{gid}/{pageSize}':
    get:
      tags:
        - Device Group Property
      summary: List Device Group Properties
      operationId: listDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Device Group ID
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/count/{atoken}':
    post:
      tags:
        - Device
      summary: Count All Devices
      operationId: countAllDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/group/count/{atoken}/{deviceId}':
    post:
      tags:
        - Device Group
      summary: Count All Device Groups
      operationId: countAllDeviceGroups
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: Device ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/device/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Device
      summary: Search Devics
      operationId: searchDevices
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/register/{dkey}/{akey}/{dmdlid}/{ver}':
    get:
      tags:
        - Device Model
      summary: Register New Device Model
      operationId: registerDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: dmdlid
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: ver
          in: path
          description: Device Model Version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/upsert/{atoken}':
    post:
      tags:
        - Device Model
      summary: Create / Update Device Model
      operationId: upsertDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceModel JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceModel'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/get/{atoken}/{dmid}':
    get:
      tags:
        - Device Model
      summary: Retreive Device
      operationId: getDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/get/ver/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Device Model
      summary: Retreive Device By Version
      operationId: getDeviceModelByVersion
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/delete/{atoken}/{dmid}':
    delete:
      tags:
        - Device Model
      summary: Delete Device Model
      operationId: deleteDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/delete/version/{atoken}/{dmid}/{ver}':
    delete:
      tags:
        - Device Model
      summary: Delete Device Model Version
      operationId: deleteDeviceModelVersion
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model Id
          required: true
          type: string
        - name: ver
          in: path
          description: Device Model Version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/list/{atoken}/{pageSize}':
    get:
      tags:
        - Device Model
      summary: List Device Models
      operationId: listDeviceModels
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of device models to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **mdlid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: mdlid
          in: query
          description: >-
            Last or First model id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/list/model/{atoken}/{pageSize}/{mdlid}':
    get:
      tags:
        - Device Model
      summary: List By Device Model
      operationId: listByDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mdlid
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of device models to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **ver** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: ver
          in: query
          description: >-
            Last or First version of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceModel'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/upsert/{atoken}':
    post:
      tags:
        - Device Model Property
      summary: Create / Update Device Model Property
      operationId: storeDeviceModelProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DeviceModelProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DeviceModelProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/get/{atoken}/{id}/{name}':
    get:
      tags:
        - Device Model Property
      summary: Retreive Device Property
      operationId: getDeviceModelProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceModelProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/list/{atoken}/{id}/{pageSize}':
    get:
      tags:
        - Device Model Property
      summary: List Device Model Properties
      operationId: listDeviceModelProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceModelProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/property/delete/{atoken}/{id}/{name}':
    delete:
      tags:
        - Device Model Property
      summary: Delete Stored Device Model Property
      operationId: deleteDeviceModelProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/count/{atoken}':
    post:
      tags:
        - Device Model
      summary: Count All Device Models
      operationId: countAllDeviceModels
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/count/mode/{atoken}/{mdlid}':
    post:
      tags:
        - Device Model
      summary: Count Devices By Device Model
      operationId: countByDeviceModel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mdlid
          in: path
          description: Device Model ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dmodel/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Device Model
      summary: Search Device Models
      operationId: searchDeviceModels
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/register': 
    post: 
      description: "Returns all domains from the system that the user has access to"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Register New Domain
      operationId: "register"
      parameters:
        - name: targetDomainKey
          in: query
          description: If the user needs to be a part of existing domain
          required: false
          type: string
        - name: user
          in: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses: 
        "200":
          description: "Newly created user and domain"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/password/reset/{email}': 
    get: 
      description: "Reset a user's password, platform will send an email with temporary password"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Register User Password
      operationId: "resetUserPassword"
      parameters:
        - name: email
          in: path
          description: Email ID
          required: true
          type: string
        - name: targetDomainKey
          in: query
          description: If the user belonged to a particular domain
          required: false
          type: string
      responses: 
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/key/reset/{atoken}': 
    get: 
      description: "Reset a Domains's API Key"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Rest API Key (domainadmin access)
      operationId: "resetApiKey"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: targetDomainKey
          in: query
          description: Reset another domain's api key (admin access)
          required: false
          type: string
      responses: 
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/ApiKey"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/list/{atoken}/{pageSize}': 
    get: 
      description: "Returns all domain keys from the system that the user has access to"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: List Domains
      operationId: "list"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of domains to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **dkey** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: dkey
          in: query
          description: >-
            Last or First domain key of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses: 
        "200":
          description: "List of domains keys"
          schema:
            type: array
            items:
              type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/login/{email}/{passwd}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Login
      operationId: "login"
      parameters:
        - name: email
          in: path
          required: true
          type: string
        - name: passwd
          in: path
          required: true
          type: string
        - name: targetDomainKey
          in: query
          description: If the user belongs to an existing domain
          required: false
          type: string
      responses: 
        "200":
          description: "UserDomain Object"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/login':
    post:
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Login with POST
      operationId: doLogin
      parameters:
        - name: entity
          in: body
          description: Login JSON object
          required: true
          schema:
            $ref: '#/definitions/Login'
      responses:
        '200':
          description: "UserDomain Object"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/login/switch/{atoken}/{targetDomainKey}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Switch Domain Login
      operationId: "switchDomainLogin"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: targetDomainKey
          in: path
          description: Another domain the user belongs to
          required: true
          type: string
      responses: 
        "200":
          description: "UserDomain JSON object"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/logout/{atoken}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Logout
      operationId: "logout"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Logged out successfully"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/link/{atoken}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Link Another Domain
      operationId: "linkDomain"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: domainKey
          description: Domain key
          in: query
          required: true
          type: string
        - name: apiKey
          description: Domain API key
          in: query
          required: true
          type: string
        - name: label
          description: Menu Label
          in: query
          required: true
          type: string
      responses: 
        "200":
          description: "Linked successfully"
          schema: 
            $ref: "#/definitions/LinkedDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/unlink/{atoken}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Unlink a Domain
      operationId: "unlinkDomain"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: domainKey
          description: Domain key
          in: query
          required: true
          type: string
      responses: 
        "200":
          description: "Unlinked successfully"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/delete/{atoken}/{dkey}': 
    delete: 
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Delete a Domain
      operationId: "deleteDomain"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: dkey
          description: Domain key
          in: path
          required: true
          type: string
        - name: force
          description: Forced delete
          in: query
          required: false
          type: boolean
      responses: 
        "200":
          description: "Delete requested successfully"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/loginas/{email}/{passwd}/{dkey}': 
    get: 
      consumes:
        - "application/json"
      produces:
        - "application/json"
      tags:
        - Domain
      summary: Login as another domain admin
      operationId: "loginAs"
      parameters:
        - name: email
          description: System admin user name/email
          in: path
          required: true
          type: string
        - name: passwd
          in: path
          required: true
          type: string
        - name: dkey
          description: Domain key
          in: path
          required: true
          type: string
        - name: userEmail
          description: User Email ID
          in: query
          required: false
          type: string
      responses: 
        "200":
          description: "UserDomain Object"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/upsert/{atoken}':
    post:
      tags:
        - Domain Property
      summary: Create / Update Domain Property
      operationId: storeDomainProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/get/{atoken}/{name}':
    get:
      tags:
        - Domain Property
      summary: Retreive Domain Property
      operationId: getDomainProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/delete/{atoken}/{name}':
    delete:
      tags:
        - Domain Property
      summary: Delete Stored Domain Property
      operationId: deleteDomainProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/deleteall/{atoken}':
    delete:
      tags:
        - Domain Property
      summary: Delete All Stored Domain Properties
      operationId: deleteAllDomainProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/property/list/{atoken}/{pageSize}':
    get:
      tags:
        - Domain Property
      summary: List Domain Properties
      operationId: listDomainProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/upsert/{atoken}':
    post:
      tags:
        - Domain Asset Group Property
      summary: Create / Update Domain Asset Group Property
      operationId: storeDomainAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainAssetGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainAssetGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Domain Asset Group Property
      summary: Retreive Domain Asset Group Property
      operationId: getDomainAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          description: Group ID
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainAssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Domain Asset Group Property
      summary: Delete Stored Domain Asset Group Property
      operationId: deleteDomainAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/deleteall/{atoken}/{gid}':
    delete:
      tags:
        - Domain Asset Group Property
      summary: Delete All Stored Domain Asset Group Properties
      operationId: deleteAllDomainAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Domain Asset Group Property
      summary: List Domain Asset Group Properties
      operationId: listDomainAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          description: Group ID
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainAssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/upsert/{atoken}':
    post:
      tags:
        - Domain Asset Group
      summary: Create / Update Domain Asset Group
      operationId: upsertDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainAssetGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainAssetGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/get/{atoken}/{gid}':
    get:
      tags:
        - Domain Asset Group
      summary: Retreive Domain Asset Group
      operationId: getDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainAssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/add/{atoken}/{gid}':
    post:
      tags:
        - Domain Asset Group
      summary: Add Members(s) to Doain Asset Group
      operationId: addMembersToDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/remove/{atoken}/{gid}':
    post:
      tags:
        - Domain Asset Group
      summary: Remove Members(s) from Domain Asset Group
      operationId: removeMembersFromDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - Domain Asset Group
      summary: Delete Domain Asset Group
      operationId: deleteDomainAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - Domain Asset Group
      summary: List Domain Asset Groups
      operationId: listDomainAssetGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainAssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/asset/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Domain Asset Group
      summary: List Domain Asset Group Members
      operationId: listDomainAssetGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the assets from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/upsert/{atoken}':
    post:
      tags:
        - Domain Device Group
      summary: Create / Update Domain Device Group
      operationId: upsertDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainDeviceGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainDeviceGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/get/{atoken}/{gid}':
    get:
      tags:
        - Domain Device Group
      summary: Retreive Domain Device Group
      operationId: getDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainDeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/add/{atoken}/{gid}':
    post:
      tags:
        - Domain Device Group
      summary: Add Members(s) to Doain Device Group
      operationId: addMembersToDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/remove/{atoken}/{gid}':
    post:
      tags:
        - Domain Device Group
      summary: Remove Members(s) from Domain Device Group
      operationId: removeMembersFromDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - Domain Device Group
      summary: Delete Domain Device Group
      operationId: deleteDomainDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - Domain Device Group
      summary: List Domain Device Groups
      operationId: listDomainDeviceGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainDeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Domain Device Group
      summary: List Domain Device Group Members
      operationId: listDomainDeviceGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/upsert/{atoken}':
    post:
      tags:
        - Domain Device Group Property
      summary: Create / Update Domain Device Group Property
      operationId: storeDomainDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainDeviceGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainDeviceGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Domain Device Group Property
      summary: Retreive Domain Device Group Property
      operationId: getDomainDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          description: Group ID
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainDeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Domain Device Group Property
      summary: Delete Stored Domain Device Group Property
      operationId: deleteDomainDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/deleteall/{atoken}/{gid}':
    delete:
      tags:
        - Domain Device Group Property
      summary: Delete All Stored Domain Device Group Properties
      operationId: deleteAllDomainDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/device/group/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Domain Device Group Property
      summary: List Domain Device Group Properties
      operationId: listDomainDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          description: Group ID
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainDeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/upsert/{atoken}':
    post:
      tags:
        - Domain User Group
      summary: Create / Update Domain User Group
      operationId: upsertDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainUserGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainUserGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/get/{atoken}/{gid}':
    get:
      tags:
        - Domain User Group
      summary: Retreive Domain User Group
      operationId: getDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainUserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - Domain User Group
      summary: List Domain User Groups
      operationId: listDomainUserGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainUserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - Domain User Group
      summary: Delete Domain User Group
      operationId: deleteDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/add/{atoken}/{gid}':
    post:
      tags:
        - Domain User Group
      summary: Add Members(s) to Doain User Group
      operationId: addMembersToDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/remove/{atoken}/{gid}':
    post:
      tags:
        - Domain User Group
      summary: Remove Members(s) from Domain User Group
      operationId: removeMembersFromDomainUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Domain User Group
      summary: List Domain User Group Members
      operationId: listDomainUserGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the users from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First user id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/upsert/{atoken}':
    post:
      tags:
        - Domain User Group Property
      summary: Create / Update Domain User Group Property
      operationId: storeDomainUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: DomainUserGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainUserGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Domain User Group Property
      summary: Retreive Domain User Group Property
      operationId: getDomainUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          description: Group ID
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainUserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Domain User Group Property
      summary: Delete Stored Domain User Group Property
      operationId: deleteDomainUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/deleteall/{atoken}/{gid}':
    delete:
      tags:
        - Domain User Group Property
      summary: Delete All Stored Domain User Group Properties
      operationId: deleteAllDomainUserGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/user/group/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Domain User Group Property
      summary: List Domain User Group Properties
      operationId: listDomainUserGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: gid
          in: path
          description: Group ID
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DomainUserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/count/{atoken}':
    post:
      tags:
        - Domain
      summary: Count All Domains
      operationId: countAllDomains
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/role/upsert/{atoken}':
    post:
      tags:
        - Domain Role
      summary: Create / Update Domain Role
      operationId: upsertDomainRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: Role JSON object
          required: true
          schema:
            $ref: '#/definitions/Role'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/role/delete/{atoken}/{id}':
    delete:
      tags:
        - Domain Role
      summary: Delete Domain Role
      operationId: deleteDomainRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/domain/access/{atoken}/{dkey}/{access}/{grant}':
    put:
      tags:
        - Domain
      summary: Grant Revoke Access
      operationId: grantRevokeAccess
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: path
          description: Domain Key
          required: true
          type: string
        - name: access
          in: path
          required: true
          type: string
          description: One of [SQL, DB, MONGO, CASSANDRA, GLOBAL]
        - name: grant
          in: path
          required: true
          type: boolean
          description: True to Grant, False to Revoke
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Access'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/upload/{atoken}/{dmid}/{ver}':
    post:
      tags:
        - Firmware
      summary: Upload Device Firmware
      operationId: uploadFirmware
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
        - name: binfile
          in: formData
          description: Firmware binary file content
          type: file
          required: true
        - name: desc
          in: formData
          description: Note about the firmware
          type: string
          required: false
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/download/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Firmware
      summary: Download firmware file
      operationId: downloadFirmwareFile
      produces:
        - "application/octet-stream"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
      responses:
        '200':
          description: Firmware binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/md5/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Firmware
      summary: Download MD5 Hash Of firmware file
      operationId: downloadMD5HashOfFirmwareFile
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device model version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/MD5Hash"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/delete/{atoken}/{dmid}/{ver}':
    delete:
      tags:
        - Firmware
      summary: Delete Device Firmware
      operationId: deleteFirmware
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model id
          required: true
          type: string
        - name: ver
          in: path
          description: Device Model version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/get/{atoken}/{dmid}/{ver}':
    get:
      tags:
        - Firmware
      summary: Get Firmware
      operationId: getFirmware
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model id
          required: true
          type: string
        - name: ver
          in: path
          description: Firmware Version
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Firmware'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/list/{atoken}/{dmid}/{pageSize}':
    get:
      tags:
        - Firmware
      summary: List Firmware
      operationId: listFirmware
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model id
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of firmware to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **ver** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: ver
          in: query
          description: >-
            Last or First firmware version of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Firmware'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/count/{atoken}':
    post:
      tags:
        - Firmware
      summary: Count All Firmwares
      operationId: countAllFirmwares
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/model/count/{atoken}/{dmid}':
    post:
      tags:
        - Firmware
      summary: Count All Firmware Versions
      operationId: countAllFirmwareVersions
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dmid
          in: path
          description: Device Model Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/count/{atoken}/{type}':
    post:
      tags:
        - Firmware
      summary: Get OTA Batch Count
      operationId: getOTABatchCount
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CREATING 
                - CREATED
                - RUNNING
                - CANCELLED
                - FAILED
                - COMPLETE
                - EXPIRED
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/list/{atoken}/{type}/{pageSize}':
    get:
      tags:
        - Firmware
      summary: List OTA Batches
      operationId: listOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First batch id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - CREATING 
                - CREATED
                - RUNNING
                - CANCELLED
                - FAILED
                - COMPLETE
                - EXPIRED
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTABatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/member/count/{atoken}/{type}/{id}':
    post:
      tags:
        - Firmware
      summary: Get OTA Batch Member Count
      operationId: getOTABatchMemberCount
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PENDING
                - DOWNLOADING
                - FAILED
                - SUCCESS
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/ota/batch/member/list/{atoken}/{type}/{id}/{pageSize}':
    get:
      tags:
        - Firmware
      summary: List OTA Batch Members
      operationId: listOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: OTA Batch Type
          required: true
          type: string
          enum:
            - MODEL
            - DEVICE
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: filterStates
          in: body
          description: Array of states
          required: false
          schema:
            type: array
            items:
              type: string
              enum:
                - PENDING
                - DOWNLOADING
                - FAILED
                - SUCCESS
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTABatchMember'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/firmware/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Firmware
      summary: Search Fimrwares
      operationId: searchFirmwares
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/upsert/{atoken}':
    post:
      tags:
        - Message Specification
      summary: Create / Update Message Definition
      operationId: upsertMessageDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: MessageSpecification JSON object
          required: true
          schema:
            $ref: '#/definitions/MessageSpecification'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/get/{atoken}/{messageId}':
    get:
      tags:
        - Message Specification
      summary: Retreive Message Definition
      operationId: getMessageDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: messageId
          in: path
          description: Message id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MessageSpecification'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/delete/{atoken}/{messageId}':
    delete:
      tags:
        - Message Specification
      summary: Delete Message Definition
      operationId: deleteMessageDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: messageId
          in: path
          description: Message Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/list/{atoken}/{pageSize}':
    get:
      tags:
        - Message Specification
      summary: List Message Definition
      operationId: listMessageDefinitions
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of message definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: If direction is specified, **mid** is required
          required: false
          type: string
          enum: [NEXT, PREV]
        - name: mid
          in: query
          description: Last or First message id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageSpecification'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/count/{atoken}':
    post:
      tags:
        - Message Specification
      summary: Count All Message Specifications
      operationId: countAllMessageSpecs
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/v2/upsert/{atoken}':
    post:
      tags:
        - Message Specification
      summary: Create / Update Message Definition V2
      operationId: upsertMessageDefinitionV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
        - name: entity
          in: body
          description: MessageSpecification JSON object
          required: true
          schema:
            $ref: '#/definitions/MessageSpecificationV2'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/v2/get/{atoken}/{messageId}':
    get:
      tags:
        - Message Specification
      summary: Retreive Message Definition V2
      operationId: getMessageDefinitionV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: messageId
          in: path
          description: Message id
          required: true
          type: string
        - name: type
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MessageSpecificationV2'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/v2/delete/{atoken}/{messageId}':
    delete:
      tags:
        - Message Specification
      summary: Delete Message Definition V2
      operationId: deleteMessageDefinitionV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: messageId
          in: path
          description: Message Id
          required: true
          type: string
        - name: type
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mspec/v2/list/{atoken}/{pageSize}':
    get:
      tags:
        - Message Specification
      summary: List Message Definition V2
      operationId: listMessageDefinitionsV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of message definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: If direction is specified, **mid** is required
          required: false
          type: string
          enum: [NEXT, PREV]
        - name: mid
          in: query
          description: Last or First message id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: type
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageSpecificationV2'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ping/{atoken}': 
    get: 
      tags:
        - Ping
      summary: Ping API endpoint
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "ping"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/PingResponse"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/upsert/{atoken}': 
    post: 
      tags:
        - User
      summary: Create or update user
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "upsertUser"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: user
          in: body
          description: User object
          required: true
          schema:
            $ref: "#/definitions/User"
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/changepass/{atoken}/{email}/{pswd}':
    post:
      tags:
        - User
      summary: Change password of an user
      operationId: changeUserPassword
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: "Auth token of the logged in user"
          required: true
          type: string
        - name: email
          in: path
          description: "Email/Username of the user"
          required: true
          type: string
        - name: pswd
          in: path
          description: "New password of the user"
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/changemypass/{atoken}/{pswd}':
    post:
      tags:
        - User
      summary: Change password of logged in user
      operationId: changeMyPassword
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: "Auth token of the logged in user"
          required: true
          type: string
        - name: pswd
          in: path
          description: "New password of the user"
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/get/{atoken}/{email}':
    get:
      tags:
        - User
      summary: Retreive User
      operationId: getUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: email
          in: path
          description: Email/Username of the user
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/list/{atoken}/{pageSize}':
    get:
      tags:
        - User
      summary: List Users
      operationId: listUsers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **email** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: email
          in: query
          description: >-
            Last or First email of the previous list operation, **required** if   **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/delete/{atoken}/{email}':
    delete:
      tags:
        - User
      summary: Delete User
      operationId: deleteUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: email
          in: path
          description: Email/Username of the user
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Property
      operationId: storeUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/UserProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/get/{atoken}/{ouid}/{name}':
    get:
      tags:
        - User
      summary: Retreive User Property
      operationId: getUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/delete/{atoken}/{ouid}/{name}':
    delete:
      tags:
        - User
      summary: Delete Stored User Property
      operationId: deleteUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/property/list/{atoken}/{ouid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Properties
      operationId: listUserProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Group
      operationId: upsertUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/UserGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/get/{atoken}/{ouid}/{gid}':
    get:
      tags:
        - User
      summary: Retreive User Group
      operationId: getUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/add/{atoken}/{ouid}/{gid}':
    post:
      tags:
        - User
      summary: Add Members(s) to User Group
      operationId: addMembersToUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/remove/{atoken}/{ouid}/{gid}':
    post:
      tags:
        - User
      summary: Remove Members(s) from User Group
      operationId: removeMembersFromUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: userIds
          in: body
          description: Array of user IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/delete/{atoken}/{ouid}/{gid}':
    delete:
      tags:
        - User
      summary: Delete User Group
      operationId: deleteUserGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/list/{atoken}/{ouid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Groups
      operationId: listUserGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/listmembers/{atoken}/{ouid}/{gid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Group Members
      operationId: listUserGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **uid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: uid
          in: query
          description: >-
            Last or First user id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/User'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Group Property
      operationId: storeUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/UserGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/get/{atoken}/{ouid}/{gid}/{name}':
    get:
      tags:
        - User
      summary: Retreive UserGroupProperty
      operationId: getUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/delete/{atoken}/{ouid}/{gid}/{name}':
    delete:
      tags:
        - User
      summary: Delete Stored UserGroupProperty
      operationId: deleteUserGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/property/list/{atoken}/{ouid}/{gid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Group Properties
      operationId: listUserGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/property/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Asset Group Property
      operationId: storeUserAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserAssetGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/UserAssetGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/property/get/{atoken}/{ouid}/{aid}/{gid}/{name}':
    get:
      tags:
        - User
      summary: Retreive UserAssetGroupProperty
      operationId: getUserAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserAssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/property/delete/{atoken}/{ouid}/{aid}/{gid}/{name}':
    delete:
      tags:
        - User
      summary: Delete Stored UserAsset Group Property
      operationId: deleteUserAssetGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/property/list/{atoken}/{ouid}/{aid}/{gid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Asset Group Properties
      operationId: listUserAssetGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: aid
          in: path
          description: Asset ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserAssetGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/property/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Device Group Property
      operationId: storeUserDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserDeviceGroupProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/UserDeviceGroupProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/property/get/{atoken}/{ouid}/{did}/{gid}/{name}':
    get:
      tags:
        - User
      summary: Retreive User Device Group Property
      operationId: getUserDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserDeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/property/delete/{atoken}/{ouid}/{did}/{gid}/{name}':
    delete:
      tags:
        - User
      summary: Delete Stored User Device Group Property
      operationId: deleteUserDeviceGroupProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: User Group ID
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/property/list/{atoken}/{ouid}/{did}/{gid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Device Group Properties
      operationId: listUserDeviceGroupProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ouid
          in: path
          description: Owner User ID
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDeviceGroupProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/count/{atoken}':
    post:
      tags:
        - User
      summary: Count All Users
      operationId: countAllUsers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/group/count/{atoken}/{userId}':
    post:
      tags:
        - User
      summary: Count All User Groups
      operationId: countAllUserGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: userId
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - User
      summary: Search Users
      operationId: searchUsers
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Asset Group
      operationId: upsertUserAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserAssetGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/UserAssetGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/get/{atoken}/{gid}':
    get:
      tags:
        - User
      summary: Retreive User Asset Group
      operationId: getUserAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserAssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/add/{atoken}/{gid}':
    post:
      tags:
        - User
      summary: Add Members(s) to User Asset Group
      operationId: addMembersToUserAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/remove/{atoken}/{gid}':
    post:
      tags:
        - User
      summary: Remove Members(s) from User Asset Group
      operationId: removeMembersFromUserAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: assetIds
          in: body
          description: Array of asset IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - User
      summary: Delete User Asset Group
      operationId: deleteUserAssetGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Asset Groups
      operationId: listUserAssetGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserAssetGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/asset/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Asset Group Members
      operationId: listUserAssetGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the assets from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of assets to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First asset id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Asset'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/upsert/{atoken}':
    post:
      tags:
        - User
      summary: Create / Update User Device Group
      operationId: upsertUserDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UserDeviceGroup JSON object
          required: true
          schema:
            $ref: '#/definitions/UserDeviceGroup'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/get/{atoken}/{gid}':
    get:
      tags:
        - User
      summary: Retreive User Device Group
      operationId: getUserDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/UserDeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/add/{atoken}/{gid}':
    post:
      tags:
        - User
      summary: Add Members(s) to User Device Group
      operationId: addMembersToUserDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/remove/{atoken}/{gid}':
    post:
      tags:
        - User
      summary: Remove Members(s) from User Device Group
      operationId: removeMembersFromUserDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
        - name: deviceIds
          in: body
          description: Array of device IDs
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/delete/{atoken}/{gid}':
    delete:
      tags:
        - User
      summary: Delete User Device Group
      operationId: deleteUserDeviceGroup
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/list/{atoken}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Device Groups
      operationId: listUserDeviceGroups
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of groups to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **gid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: gid
          in: query
          description: >-
            Last or First group id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/UserDeviceGroup'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/device/group/listmembers/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Device Group Members
      operationId: listUserDeviceGroupMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Group id to list the devices from
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of devices to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Device'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/role/list/{atoken}/{userId}/{pageSize}':
    get:
      tags:
        - User
      summary: List User Roles
      operationId: listUserRoles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: userId
          in: path
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **roleId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: roleId
          in: query
          description: >-
            Last or First roleId of the previous list operation, **required** if   **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/role/assign/{atoken}/{userId}/{roleId}': 
    get: 
      tags:
        - User
      summary: Assign User Role
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "assignUserRole"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: userId
          in: path
          required: true
          type: string
        - name: roleId
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/role/unassign/{atoken}/{userId}/{roleId}': 
    delete: 
      tags:
        - User
      summary: Unassign User Role
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "unassignUserRole"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: userId
          in: path
          required: true
          type: string
        - name: roleId
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/role/unassignall/{atoken}/{userId}': 
    delete: 
      tags:
        - User
      summary: Unassign All User Roles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "unassignAllUserRoles"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: userId
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/user/role/get/{atoken}/{userId}/{roleId}': 
    get: 
      tags:
        - User
      summary: Get User Role
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getUserRole"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: userId
          in: path
          required: true
          type: string
        - name: roleId
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/upsert/{atoken}':
    post:
      tags:
        - Rule
      summary: Create / Update Message Rule
      operationId: upsertMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
        - name: entity
          in: body
          description: MessageRule or GlobalMessageRule JSON object
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/get/{atoken}/{mid}':
    get:
      tags:
        - Rule
      summary: Retreive Message Rule
      operationId: getMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mid
          in: path
          description: Message id
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/MessageRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/list/{atoken}/{pageSize}':
    get:
      tags:
        - Rule
      summary: List Message Rules
      operationId: listMessageRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **mid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: mid
          in: query
          description: >-
            Last or First message id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: rtype
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/MessageRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/delete/{atoken}/{mid}':
    delete:
      tags:
        - Rule
      summary: Delete a Message Rule
      operationId: deleteMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: mid
          in: path
          description: Message id
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/rules/compile/{atoken}':
    post:
      tags:
        - Rule
      summary: Compile a Message Rule
      operationId: compileMessageRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is STANDARD
          required: false
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/upsert/{atoken}':
    post:
      tags:
        - Domain Rule
      summary: Create / Update Domain Rule
      operationId: upsertDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DomainRule JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/get/{atoken}':
    get:
      tags:
        - Domain Rule
      summary: Retreive Domain Rule
      operationId: getDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DomainRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/delete/{atoken}':
    delete:
      tags:
        - Domain Rule
      summary: Delete Domain Rule
      operationId: deleteDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/compile/{atoken}':
    post:
      tags:
        - Domain Rule
      summary: Compile a Domain Rule
      operationId: compileDomainRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/drules/count/{atoken}':
    post:
      tags:
        - Domain Rule
      summary: Count All Domain Rules
      operationId: countAllDomainRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/upsert/{atoken}':
    post:
      tags:
        - Scheduled Rule
      summary: Create / Update Scheduled Rule
      operationId: upsertScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [STANDARD, DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: ScheduledRule or GlobalScheduledRule JSON object
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/get/{atoken}/{id}':
    get:
      tags:
        - Scheduled Rule
      summary: Retreive Scheduled Rule
      operationId: getScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Scheduled rule id
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation, return ScheduledRule or GlobalScheduledRule
          schema:
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/delete/{atoken}/{id}':
    delete:
      tags:
        - Scheduled Rule
      summary: Delete a Scheduled Rule
      operationId: deleteScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Scheduled rule id
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/listids/{atoken}/{pageSize}':
    get:
      tags:
        - Scheduled Rule
      summary: List Scheduled Rule IDs
      operationId: listScheduledRuleIDs
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of names to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First rule id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: integer
              format: int64
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/list/{atoken}/{pageSize}':
    get:
      tags:
        - Scheduled Rule
      summary: List Scheduled Rules
      operationId: listScheduledRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First rule id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation, return list of ScheduledRule or GlobalScheduledRule
          schema:
            type: array
            items:
              type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/count/{atoken}':
    post:
      tags:
        - Scheduled Rule
      summary: Count All Scheduled Rules
      operationId: countAllScheduledRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/srules/compile/{atoken}':
    post:
      tags:
        - Scheduled Rule
      summary: Compile a Scheduled Rule
      operationId: compileScheduledRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/upsert/{atoken}':
    post:
      tags:
        - Named Rule
      summary: Create / Update Named Rule
      operationId: upsertNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: NamedRule JSON object
          required: true
          schema:
            $ref: '#/definitions/NamedRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/get/{atoken}/{name}':
    get:
      tags:
        - Named Rule
      summary: Retreive Named Rule
      operationId: getNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Named rule name
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/NamedRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/delete/{atoken}/{name}':
    delete:
      tags:
        - Named Rule
      summary: Delete Named Rule
      operationId: deleteNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Named rule name
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/delete/all/{atoken}':
    delete:
      tags:
        - Named Rule
      summary: Delete All Named Rules
      operationId: deleteAllNamedRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/listnames/{atoken}/{pageSize}':
    get:
      tags:
        - Named Rule
      summary: List Rule Names
      operationId: listRuleNames
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of names to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First rule name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/list/{atoken}/{pageSize}':
    get:
      tags:
        - Named Rule
      summary: List Named Rules
      operationId: listNamedRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First rule name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/NamedRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/count/{atoken}':
    post:
      tags:
        - Named Rule
      summary: Count All Named Rules
      operationId: countAllNamedRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/nrules/compile/{atoken}':
    post:
      tags:
        - Named Rule
      summary: Compile a Named Rule
      operationId: compileNamedRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: Rule JSON object
          required: true
          schema:
            $ref: '#/definitions/Rule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/json/message':
    post:
      tags:
        - Push
      summary: Push New Message
      operationId: pushMessage
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: entity
          in: body
          description: Message JSON object
          required: true
          schema:
            $ref: '#/definitions/PushJSONMessage'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/message':
    post:
      tags:
        - Push
      summary: Push Old Message
      operationId: pushOldMessage
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: entity
          in: body
          description: Message JSON object
          required: true
          schema:
            $ref: '#/definitions/PushMessage'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/json/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{mid}':
    post:
      tags:
        - Push
      summary: Push JSON Data
      operationId: pushJSONData
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID (defined through message spec)
          required: true
          type: integer
          format: int64
        - name: data
          in: body
          description: JSON Data
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/raw/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{mid}':
    post:
      tags:
        - Push
      summary: Push Raw Message
      operationId: pushRawMessage
      consumes:
        - "*/*"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID (defined through message spec)
          required: true
          type: integer
          format: int64
        - name: format
          in: query
          description: data encoding format (default JSON as string)
          required: false
          type: string
          enum:
            - JSON
            - TEXT
            - HEX
            - BASE64
        - name: data
          in: body
          description: data as text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/bin/file/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary File
      operationId: pushBinaryFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: binfile
          in: formData
          description: Binary file content
          type: file
          required: true
        - name: properties
          in: formData
          description: extra properties for decoding
          type: string
          required: false
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/bin/data/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary Data
      operationId: pushBinaryData
      consumes:
        - "*/*"
      produces:
        - application/json
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: format
          in: query
          description: data decoding format
          required: false
          type: string
          enum:
            - TEXT
            - HEX
            - BASE64
        - name: contentType
          in: query
          description: content type, ex filename.jpg
          required: false
          type: string
        - name: properties
          in: query
          description: extra properties for decoding
          required: false
          type: string
        - name: data
          in: body
          description: content text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/bin/json/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary JSON
      operationId: pushBinaryJSON
      consumes:
        - application/json
        - Application/json
      produces:
        - application/json
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: properties
          in: query
          description: extra properties for decoding
          required: false
          type: string
        - name: data
          in: body
          description: json document
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/bin/form/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary Form
      operationId: pushBinaryForm
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: properties
          in: query
          description: extra properties for decoding
          required: false
          type: string
        - name: data
          in: formData
          description: json document
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/v2/json/{did}/{dmdl}/{fwver}/{mid}':
    post:
      tags:
        - Push
      summary: Push JSON Data
      operationId: pushJSONDataV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: header
          description: Domain key
          required: true
          type: string
        - name: akey
          in: header
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID (defined through message spec)
          required: true
          type: integer
          format: int64
        - name: data
          in: body
          description: JSON Data
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/v2/raw/{did}/{dmdl}/{fwver}/{mid}':
    post:
      tags:
        - Push
      summary: Push Raw Message
      operationId: pushRawMessageV2
      consumes:
        - "*/*"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: header
          description: Domain key
          required: true
          type: string
        - name: akey
          in: header
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: mid
          in: path
          description: Message ID (defined through message spec)
          required: true
          type: integer
          format: int64
        - name: format
          in: query
          description: data encoding format (default JSON as string)
          required: false
          type: string
          enum:
            - JSON
            - TEXT
            - HEX
            - BASE64
        - name: data
          in: body
          description: data as text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/PushResult'
  '/push/v2/bin/file/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary File
      operationId: pushBinaryFileV2
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: dkey
          in: header
          description: Domain key
          required: true
          type: string
        - name: akey
          in: header
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: binfile
          in: formData
          description: Binary file content
          type: file
          required: true
        - name: properties
          in: formData
          description: extra properties for decoding
          type: string
          required: false
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/v2/bin/data/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary Data
      operationId: pushBinaryDataV2
      consumes:
        - "*/*"
      produces:
        - application/json
      parameters:
        - name: dkey
          in: header
          description: Domain key
          required: true
          type: string
        - name: akey
          in: header
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: format
          in: query
          description: data decoding format
          required: false
          type: string
          enum:
            - TEXT
            - HEX
            - BASE64
        - name: contentType
          in: query
          description: content type, ex filename.jpg
          required: false
          type: string
        - name: properties
          in: query
          description: extra properties for decoding
          required: false
          type: string
        - name: data
          in: body
          description: content text
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/v2/bin/json/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary JSON
      operationId: pushBinaryJSONV2
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: dkey
          in: header
          description: Domain key
          required: true
          type: string
        - name: akey
          in: header
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: properties
          in: query
          description: extra properties for decoding
          required: false
          type: string
        - name: data
          in: body
          description: json document
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/v2/bin/form/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push Binary Form
      operationId: pushBinaryFormV2
      consumes:
        - application/x-www-form-urlencoded
      produces:
        - application/json
      parameters:
        - name: dkey
          in: header
          description: Domain key
          required: true
          type: string
        - name: akey
          in: header
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: binary rule type
          required: true
          type: string
        - name: properties
          in: query
          description: extra properties for decoding
          required: false
          type: string
        - name: data
          in: formData
          description: json document
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/push/file/{dkey}/{akey}/{did}/{dmdl}/{fwver}/{type}':
    post:
      tags:
        - Push
      summary: Push File Rule
      operationId: pushFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: dkey
          in: path
          description: Domain key
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device model
          required: true
          type: string
        - name: fwver
          in: path
          description: Device firmware version
          required: true
          type: string
        - name: type
          in: path
          description: file rule type
          required: true
          type: string
        - name: binfile
          in: formData
          description: Binary file content
          type: file
          required: true
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/get/{atoken}/{muid}':
    get:
      tags:
        - Message
      summary: Retreive Device Message
      operationId: getDeviceMessage
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: muid
          in: path
          description: message UUID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DeviceMessage'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/list/{atoken}/{pageSize}':
    get:
      tags:
        - Message
      summary: List Device Messages
      operationId: listDeviceMessages
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of messages to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **muid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: muid
          in: query
          description: >-
            Last or First message uuid of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/DeviceMessage'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/count/{atoken}/{id}':
    post:
      tags:
        - Message
      summary: Count All Messages
      operationId: countAllMessages
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Message ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/get/raw/{atoken}/{muid}':
    get:
      tags:
        - Message
      summary: Get Raw Message
      operationId: getRawMessage
      consumes:
        - "application/json"
      produces:
        - "application/json"
        - "image/*"
        - "text/plain"
        - "*/*"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: muid
          in: path
          description: message UUID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/get/raw/content/{atoken}/{muid}':
    get:
      tags:
        - Message
      summary: Get Raw Message Content
      operationId: getRawMessageContent
      consumes:
        - "application/json"
      produces:
        - "application/json"
        - "image/*"
        - "text/plain"
        - "*/*"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: muid
          in: path
          description: message UUID
          required: true
          type: string
        - name: ctype
          in: query
          description: Response content-type
          required: false
          type: string
      responses:
        '200':
          description: Content Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/message/download/raw/content/{atoken}/{muid}':
    get:
      tags:
        - Message
      summary: Get Download Message Content
      operationId: downloadRawMessageContent
      consumes:
        - "application/json"
      produces:
        - "application/json"
        - "image/*"
        - "text/plain"
        - "*/*"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: muid
          in: path
          description: message UUID
          required: true
          type: string
        - name: ctype
          in: query
          description: Response content-type
          required: false
          type: string
      responses:
        '200':
          description: Content Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/send/{atoken}/{commandId}':
    post:
      tags:
        - Command
      summary: Send a Dynamic command to one device
      operationId: sendDynamicCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: commandId
          in: path
          description: Command Identifier
          required: true
          type: integer
          format: int32
        - name: command
          in: body
          description: Command JSON object
          required: true
          schema:
            $ref: '#/definitions/Command'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/broadcast/{atoken}/{commandId}':
    post:
      tags:
        - Command
      summary: Broadcast a Dynamic command to multiple devices
      operationId: broadcastDynamicCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: commandId
          in: path
          description: Command Identifier
          required: true
          type: integer
          format: int32
        - name: command
          in: body
          description: BroadcastCommand JSON object
          required: true
          schema:
            $ref: '#/definitions/BroadcastCommand'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/raw/send/{atoken}/{type}':
    post:
      tags:
        - Command
      summary: Send a raw command to a device
      operationId: sendRawCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: data type
          required: true
          type: string
          enum:
            - TEXT
            - JSON
            - HEX
            - BASE64
        - name: command
          in: body
          description: Command JSON object
          required: true
          schema:
            $ref: '#/definitions/Command'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/raw/broadcast/{atoken}/{type}':
    post:
      tags:
        - Command
      summary: Broadcast raw command to multiple devices
      operationId: broadcastRawCommand
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: data type
          required: true
          type: string
          enum:
            - TEXT
            - JSON
            - HEX
            - BASE64
        - name: command
          in: body
          description: BroadcastCommand JSON object
          required: true
          schema:
            $ref: '#/definitions/BroadcastCommand'
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/template/send/{atoken}/{deviceId}/{commandId}/{templateId}/{system}':
    post:
      tags:
        - Command
      summary: Send a Static Command to one device using Template
      operationId: sendStaticCommandUsingTemplate
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: device id
          required: true
          type: string
        - name: commandId
          in: path
          description: static command id
          required: true
          type: integer
          format: int32
        - name: templateId
          in: path
          description: template id
          required: true
          type: string
        - name: system
          in: path
          description: 'true for system template'
          required: true
          type: boolean
        - name: mergeContent
          in: body
          description: Merge Content JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/property/send/{atoken}/{deviceId}/{commandId}/{property}':
    post:
      tags:
        - Command
      summary: Send a Command using Property
      operationId: sendCommandUsingProperty
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: device id
          required: true
          type: string
        - name: commandId
          in: path
          description: static command id
          required: true
          type: integer
          format: int32
        - name: property
          in: path
          description: property name
          required: true
          type: string
        - name: command
          in: body
          description: PropertyCommand JSON object
          required: true
          schema:
            $ref: '#/definitions/PropertyCommand'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/status/{atoken}/{deviceId}/{corrId}':
    get:
      tags:
        - Command
      summary: Get Command Status
      operationId: getCommandStatus
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: deviceId
          in: path
          description: device id
          required: true
          type: string
        - name: corrId
          in: path
          description: Correlation ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandStatus'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/command/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Command
      summary: Search Commands
      operationId: searchCommands
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/upsert/{atoken}':
    post:
      tags:
        - Command Specification
      summary: Create / Update Command Definition
      operationId: upsertCommandDefinition
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: CommandDefinition JSON object
          required: true
          schema:
            $ref: '#/definitions/CommandDefinition'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/get/{atoken}/{cid}':
    get:
      tags:
        - Command Specification
      summary: Retreive Command Definition
      operationId: getCommandDefinition
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: cid
          in: path
          description: Command id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/CommandDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/delete/{atoken}/{cid}':
    delete:
      tags:
        - Command Specification
      summary: Delete Command Definition
      operationId: deleteCommandDefinition
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: cid
          in: path
          description: Command Id
          required: true
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/list/{atoken}/{pageSize}':
    get:
      tags:
        - Command Specification
      summary: List Command Definition
      operationId: listCommandDefinitions
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of command definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **cid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: cid
          in: query
          description: >-
            Last or First command id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int32
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/CommandDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cspec/count/{atoken}':
    post:
      tags:
        - Command Specification
      summary: Count All Command Specifications
      operationId: countAllCommandSpecs
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/elastic/search/query/{atoken}/{type}':
    post:
      tags:
        - Elastic Search
      summary: Search By Query Old
      operationId: searchByQueryOld
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: specId
          in: query
          required: false
          type: integer
          format: int64
          description: 'Required if **type** is one of **[ message | record ]**'
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/search/template/{atoken}/{type}':
    post:
      tags:
        - Elastic Search
      summary: Search by Template Old
      operationId: searchByTemplateOld
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: specId
          in: query
          required: false
          type: integer
          format: int64
          description: 'Required if **type** is one of **[ message | command | record ]**'
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/purge/query/{atoken}/{type}':
    post:
      tags:
        - Elastic Search
      summary: Purge Old
      operationId: purgeOld
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: specId
          in: query
          required: false
          type: integer
          format: int64
          description: 'Required if **type** is one of **[ message | record ]**'
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/purge/template/{atoken}/{type}':
    post:
      tags:
        - Elastic Search
      summary: Purge by Template Old
      operationId: purgeByTemplateOld
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: specId
          in: query
          required: false
          type: integer
          format: int64
          description: 'Required if **type** is one of **[ message | record ]**'
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/search/query/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Search By Query
      operationId: searchByQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/count/query/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Count By Query
      operationId: countByQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/scroll/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Scroll previous result set
      operationId: scrollResults
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: ScrollQuery JSON
          required: true
          schema:
            $ref: '#/definitions/ScrollQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/search/template/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Search by Template
      operationId: searchByTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/purge/query/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Purge
      operationId: purge
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/purge/template/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Purge by Template
      operationId: purgeByTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/find/{atoken}/{type}/{entityId}':
    get:
      tags:
        - Elastic Search
      summary: Find By ID
      operationId: findByID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: entityId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/merge/{atoken}/{type}/{entityId}':
    post:
      tags:
        - Elastic Search
      summary: Merge By ID
      operationId: mergeByID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: entityId
          in: path
          description: Document ID
          required: true
          type: string
        - name: content
          in: body
          description: TextContent JSON
          required: true
          schema:
            $ref: '#/definitions/TextContent'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/remove/{atoken}/{type}/{entityId}':
    get:
      tags:
        - Elastic Search
      summary: Remove By ID
      operationId: removeByID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
        - name: entityId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/update/query/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Update By Query
      operationId: updateByQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/elastic/update/template/{atoken}':
    post:
      tags:
        - Elastic Search
      summary: Update by Template
      operationId: updateByTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/event/upsert/{atoken}':
    post:
      tags:
        - Event
      summary: Create / Update Event
      operationId: upsertEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Event JSON object
          required: true
          schema:
            $ref: '#/definitions/Event'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/get/{atoken}/{eid}':
    get:
      tags:
        - Event
      summary: Retreive Event
      operationId: getEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Event'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/delete/{atoken}/{eid}':
    delete:
      tags:
        - Event
      summary: Delete Event
      operationId: deleteEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/count/{atoken}':
    post:
      tags:
        - Event
      summary: Count All Events
      operationId: countAllEvents
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/clear/{atoken}':
    delete:
      tags:
        - Event
      summary: Delete all Events
      operationId: deleteAllEvents
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/list/{atoken}/{pageSize}':
    get:
      tags:
        - Event
      summary: List Events
      operationId: listEvents
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of events to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **eid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: eid
          in: query
          description: >-
            Last or First event id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Event'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/event/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Event
      summary: Search Events
      operationId: searchEvents
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/register/{atoken}/{eid}/{channel}/{address}':
    post:
      tags:
        - Event Registration
      summary: Register Event
      operationId: registerEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
        - name: address
          in: path
          description: Notification address (email, phone, etc...)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/unregister/{atoken}/{eid}/{channel}/{address}':
    delete:
      tags:
        - Event Registration
      summary: Unregister Event
      operationId: unregisterEvent
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
        - name: address
          in: path
          description: Notification address (email, phone, etc...)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/list/{atoken}/{eid}/{channel}/{pageSize}':
    get:
      tags:
        - Event Registration
      summary: List Event Registrations
      operationId: listEventRegistrations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
        - name: pageSize
          in: path
          description: Maximum number of events to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **address** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: address
          in: query
          description: >-
            Last or First to address of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/EventRegistration'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/id/unregister/{atoken}/{eid}':
    delete:
      tags:
        - Event Registration
      summary: Unregister Event By ID
      operationId: unregisterEventByID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/channel/unregister/{atoken}/{eid}/{channel}':
    delete:
      tags:
        - Event Registration
      summary: Unregister Event By Channel
      operationId: unregisterEventByChannel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/count/{atoken}':
    post:
      tags:
        - Event Registration
      summary: Count All Registrations
      operationId: countAllEventRegistrations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/id/count/{atoken}/{eid}':
    post:
      tags:
        - Event Registration
      summary: Count All Event Registrations for ID
      operationId: countAllEventRegistrationsForID
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/channel/count/{atoken}/{eid}/{channel}':
    post:
      tags:
        - Event Registration
      summary: Count All Event Registrations for Channel
      operationId: countAllEventRegistrationsForChannel
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: eid
          in: path
          description: Event Id
          required: true
          type: integer
          format: int64
        - name: channel
          in: path
          description: Notification Channel
          required: true
          type: string
          enum:
            - 'EMAIL'
            - 'SMS'
            - 'VOICE'
            - 'FCM'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/eventreg/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Event Registration
      summary: Search Event Registrations
      operationId: searchEventRegistrations
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/upsert/{atoken}':
    post:
      tags:
        - Record Specification
      summary: Create / Update Record Definition
      operationId: upsertRecordDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: RecordDefinition JSON object
          required: true
          schema:
            $ref: '#/definitions/RecordDefinition'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/get/{atoken}/{rid}':
    get:
      tags:
        - Record Specification
      summary: Retreive Record Definition
      operationId: getRecordDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Record id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RecordDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/delete/{atoken}/{rid}':
    delete:
      tags:
        - Record Specification
      summary: Delete Record Definition
      operationId: deleteRecordDefinition
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Record Id
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/list/{atoken}/{pageSize}':
    get:
      tags:
        - Record Specification
      summary: List Record Definitions
      operationId: listRecordDefinitions
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of record definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **rid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: rid
          in: query
          description: >-
            Last or First record id of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/v2/spec/upsert/{atoken}':
    post:
      tags:
        - Record Specification
      summary: Create / Update Record Definition V2
      operationId: upsertRecordDefinitionV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: RecordDefinition JSON object
          required: true
          schema:
            $ref: '#/definitions/RecordDefinitionV2'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/v2/spec/get/{atoken}/{rid}':
    get:
      tags:
        - Record Specification
      summary: Retreive Record Definition V2
      operationId: getRecordDefinitionV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Record id
          required: true
          type: string
        - name: type
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/RecordDefinitionV2'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/v2/spec/delete/{atoken}/{rid}':
    delete:
      tags:
        - Record Specification
      summary: Delete Record Definition V2
      operationId: deleteRecordDefinitionV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Record Id
          required: true
          type: string
        - name: type
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/v2/spec/list/{atoken}/{pageSize}':
    get:
      tags:
        - Record Specification
      summary: List Record Definitions V2
      operationId: listRecordDefinitionsV2
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of record definitions to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **rid** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: rid
          in: query
          description: >-
            Last or First record id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: type
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/RecordDefinition'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/storage/spec/count/{atoken}':
    post:
      tags:
        - Record Specification
      summary: Count All Record Specifications
      operationId: countAllRecordSpecs
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/script/execute/{atoken}':
    post:
      tags:
        - Script
      summary: Execute boodskap console script
      operationId: executeScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: Script JSON
          required: true
          schema:
            $ref: "#/definitions/Script"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/ScriptResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/upsert/{atoken}':
    post:
      tags:
        - Geofence
      summary: Create / Update Geofence
      operationId: upsertGeofence
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: geotype
          in: query
          description: Geoshape type 
          required: true
          type: string
          enum:
            - POINT
            - ENVELOPE
            - CIRCLE
            - LINESTRING
            - POLYGON
            - MULTIPOINT
            - MULTILINESTRING
            - MULTIPOLYGON
            - GEOMETRYCOLLECTION
        - name: dto
          in: body
          description: Geofence JSON object
          required: true
          schema:
            $ref: '#/definitions/Geofence'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Geofence
      summary: Search Geofences
      operationId: searchGeofences
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/delete/{atoken}/{group}/{name}':
    delete:
      tags:
        - Geofence
      summary: Delete Geofence
      operationId: deleteGeofence
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: group
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/deleteall/{atoken}/{group}':
    delete:
      tags:
        - Geofence
      summary: Delete All Geofences
      operationId: deleteAllGeofences
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: group
          in: path
          description: Group name 
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/clear/{atoken}':
    delete:
      tags:
        - Geofence
      summary: Clear All Geofences
      operationId: clearAllGeofences
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/upsert/{atoken}':
    post:
      tags:
        - Geofence
      summary: Create / Update Geofence Property
      operationId: storeGeofenceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: GeofenceProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/GeofenceProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/get/{atoken}/{gid}/{name}':
    get:
      tags:
        - Geofence
      summary: Retreive Geofence Property
      operationId: getGeofenceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Geofence ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/GeofenceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/delete/{atoken}/{gid}/{name}':
    delete:
      tags:
        - Geofence
      summary: Delete Geofence Property
      operationId: deleteGeofenceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Geofence ID
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/geofence/property/list/{atoken}/{gid}/{pageSize}':
    get:
      tags:
        - Geofence
      summary: List Geofence Properties
      operationId: listGeofenceProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: gid
          in: path
          description: Geofence ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/GeofenceProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/upsert/{atoken}':
    post:
      tags:
        - Location
      summary: Create / Update Location
      operationId: upsertLocation
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: Location JSON object
          required: true
          schema:
            $ref: '#/definitions/Location'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/delete/{atoken}/{id}':
    delete:
      tags:
        - Location
      summary: Delete Location
      operationId: deleteLocation
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/deleteall/{atoken}/{type}':
    delete:
      tags:
        - Location
      summary: Delete All Locations
      operationId: deleteAllLocations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: Location type 
          required: true
          type: string
          enum:
            - ENTITY
            - ASSET
            - DEVICE
        - name: id
          in: query
          description: Entity or Device or Asset ID 
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/clear/{atoken}':
    delete:
      tags:
        - Location
      summary: Clear All Locations
      operationId: clearAllLocations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/location/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Location
      summary: Search Locations
      operationId: searchLocations
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/create/{atoken}/{name}/{tmodel}/{tver}': 
    get: 
      tags:
        - Device Over The Air Upgrade
      summary: Create Device OTA Batch
      operationId: "createDeviceOTABatch"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Batch Name
          required: true
          type: string
        - name: tmodel
          in: path
          description: To Device Model ID
          required: true
          type: string
        - name: tver
          in: path
          description: To Device Model Version
          required: true
          type: string
        - name: expireAt
          in: query
          description: Expire after date
          required: false
          type: string
          format: date
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OTADeviceBatch"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/get/{atoken}/{id}':
    get:
      tags:
        - Device Over The Air Upgrade
      summary: Retreive Device OTA Batch
      operationId: getDeviceOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OTADeviceBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/list/{atoken}/{pageSize}':
    get:
      tags:
        - Device Over The Air Upgrade
      summary: List Device OTA Batches
      operationId: listDeviceOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of batches to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First batch ota id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTADeviceBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/start/{atoken}/{id}':
    get:
      tags:
        - Device Over The Air Upgrade
      summary: Start Device OTA Batch
      operationId: startDeviceOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/count/{atoken}/{id}':
    post:
      tags:
        - Device Over The Air Upgrade
      summary: Count All Device OTA Batches
      operationId: countAllDeviceOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/delete/{atoken}/{id}':
    delete:
      tags:
        - Device Over The Air Upgrade
      summary: Delete Device OTA Batch
      operationId: deleteDeviceOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/add/{atoken}/{id}/{did}':
    delete:
      tags:
        - Device Over The Air Upgrade
      summary: Add Device OTA Batch Member
      operationId: addDeviceOTABatchMember
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/list/{atoken}/{pageSize}':
    get:
      tags:
        - Device Over The Air Upgrade
      summary: List Device OTA Batch Members
      operationId: listDeviceOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTADeviceBatchMember'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/delete/{atoken}/{id}/{did}':
    delete:
      tags:
        - Device Over The Air Upgrade
      summary: Delete Device OTA Batch Member
      operationId: deleteDeviceOTABatchMember
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/dota/member/count/{atoken}/{id}':
    post:
      tags:
        - Device Over The Air Upgrade
      summary: Count All Device OTA Batch Members
      operationId: countAllDeviceOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/create/{atoken}/{name}/{fmodel}/{fver}/{tmodel}/{tver}': 
    get: 
      tags:
        - Over The Air Upgrade Model
      summary: Create Model OTA Batch
      operationId: "createModelOTABatch"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          description: Batch Name
          required: true
          type: string
        - name: fmodel
          in: path
          description: From Model ID
          required: true
          type: string
        - name: fver
          in: path
          description: From Model Version
          required: true
          type: string
        - name: tmodel
          in: path
          description: To Model ID
          required: true
          type: string
        - name: tver
          in: path
          description: To Model Version
          required: true
          type: string
        - name: expireAt
          in: query
          description: Expire after date
          required: false
          type: string
          format: date
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/OTAModelBatch"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/get/{atoken}/{id}':
    get:
      tags:
        - Over The Air Upgrade Model
      summary: Retreive Model OTA Batch
      operationId: getModelOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/OTAModelBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/list/{atoken}/{pageSize}':
    get:
      tags:
        - Over The Air Upgrade Model
      summary: List Model OTA Batches
      operationId: listModelOTABatches
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of batches to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **id** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: id
          in: query
          description: >-
            Last or First batch ota id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTAModelBatch'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/member/list/{atoken}/{id}/{pageSize}':
    get:
      tags:
        - Over The Air Upgrade Model
      summary: List Model OTA Batch Members
      operationId: listModelOTABatchMembers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Batch ID
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of members to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **did** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: did
          in: query
          description: >-
            Last or First device id of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/OTAModelBatchMember'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/start/{atoken}/{id}':
    get:
      tags:
        - Over The Air Upgrade Model
      summary: Start Model OTA Batch
      operationId: startModelOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/delete/{atoken}/{id}':
    delete:
      tags:
        - Over The Air Upgrade Model
      summary: Delete Model OTA Batch
      operationId: deleteModelOTABatch
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mota/member/delete/{atoken}/{id}/{did}':
    delete:
      tags:
        - Over The Air Upgrade Model
      summary: Delete Model OTA Batch Member
      operationId: deleteModelOTABatchMember
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch id
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ota/recent/get/{dkey}/{akey}/{dmdl}':
    get:
      tags:
        - Over The Air Upgrade
      summary: Get Recent Firmware Info
      operationId: getRecentFirmwareInfo
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: dkey
          in: path
          description: domainKey to which the firmware belongs
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device Model ID
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: "#/definitions/FirmwareInfo"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ota/update/download/{dkey}/{akey}/{dmdl}/{fwver}':
    get:
      tags:
        - Over The Air Upgrade
      summary: Download Firmware
      operationId: downloadFirmware
      consumes:
        - "text/plain"
      produces:
        - "application/octect-stream"
      parameters:
        - name: dkey
          in: path
          description: domainKey to which the firmware belongs
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: dmdl
          in: path
          description: Device Model ID
          required: true
          type: string
        - name: fwver
          in: path
          description: Firmware Version
          required: true
          type: string
      responses:
        '200':
          description: Firmware binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/ota/batch/download/{dkey}/{akey}/{did}/{id}':
    get:
      tags:
        - Over The Air Upgrade
      summary: Download Batched Firmware
      operationId: downloadBatchedFirmware
      consumes:
        - "text/plain"
      produces:
        - "application/octect-stream"
      parameters:
        - name: dkey
          in: path
          description: domainKey to which the firmware belongs
          required: true
          type: string
        - name: akey
          in: path
          description: API key
          required: true
          type: string
        - name: did
          in: path
          description: Device id
          required: true
          type: string
        - name: id
          in: path
          description: OTA Batch ID
          required: true
          type: string
      responses:
        '200':
          description: Firmware binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/upload/{atoken}':
    post:
      tags:
        - Template
      summary: Upload Template File
      operationId: uploadTemplateFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: True if system template
          required: false
          type: boolean
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: jsonfile
          in: formData
          description: JSON Template list file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/download/{atoken}':
    get:
      tags:
        - Template
      summary: Download Template File
      operationId: downloadTemplateFile
      consumes:
        - "text/plain"
      produces:
        - "application/octect-stream"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: True if system template
          required: false
          type: boolean
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: JSON Template list file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/upsert/{atoken}':
    post:
      tags:
        - Template
      summary: Create / Update Template
      operationId: upsertTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: Template JSON object
          required: true
          schema:
            $ref: '#/definitions/Template'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/get/{atoken}/{name}':
    get:
      tags:
        - Template
      summary: Retreive Template
      operationId: getTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Template'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/list/{atoken}/{pageSize}':
    get:
      tags:
        - Template
      summary: List Templates
      operationId: listTemplates
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of templates to be listed
          required: true
          type: integer
          format: int32
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First template name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Template'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/delete/{atoken}/{name}':
    delete:
      tags:
        - Template
      summary: Delete a Template
      operationId: deleteTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/merge/{atoken}/{name}':
    post:
      tags:
        - Template
      summary: Merge a Template
      operationId: mergeTemplate
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: mergeContent
          in: body
          description: Merge Content JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema: 
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/templates/v2/merge/{atoken}/{name}':
    post:
      tags:
        - Template
      summary: Merge a V2 Template
      operationId: mergeV2Template
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: system
          in: query
          description: 'true for system template'
          required: false
          type: boolean
        - name: name
          in: path
          description: Template Name
          required: true
          type: string
        - name: ttype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: mergeContent
          in: body
          description: Merge Content JSON object
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/lookup/put/{atoken}':
    post:
      tags:
        - Lookup
      summary: Put Lookup Data
      operationId: putLookupData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: Lookup JSON
          required: true
          schema:
            $ref: "#/definitions/Lookup"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/lookup/get/{atoken}':
    post:
      tags:
        - Lookup
      summary: Get Lookup Data
      operationId: getLookupData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: LookupGet JSON
          required: true
          schema:
            $ref: "#/definitions/LookupGet"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/LookupResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/lookup/remove/{atoken}':
    post:
      tags:
        - Lookup
      summary: Delete Lookup Data
      operationId: deleteLookupData
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: script
          in: body
          description: LookupDelete JSON
          required: true
          schema:
            $ref: "#/definitions/LookupDelete"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/statistics': 
    get: 
      tags:
        - Cluster
      summary: Get Cluster Statistics
      operationId: "getClusterStatistics"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: domainKey
          in: query
          description: Domain Key
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ClusterNodes"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/nodes/list/{atoken}': 
    get: 
      tags:
        - Cluster
      summary: List Cluster Nodes
      operationId: "listClusterNodes"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: info
          in: query
          required: false
          type: boolean
        - name: detailed
          in: query
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ClusterNodes"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/shutdown/{atoken}': 
    get: 
      tags:
        - Cluster
      summary: Shutdown Cluster
      operationId: "shutdownCluster"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: restart
          in: query
          description: True to reboot
          required: false
          type: boolean
      responses: 
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/reindex/{atoken}/{type}': 
    get: 
      tags:
        - Cluster
      summary: Re Index Cluster
      operationId: "reindexCluster"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          required: true
          type: string
          enum:
            - 'DEVICES'
            - 'DOMAIN'
        - name: domainKey
          in: query
          required: false
          type: string
          description: 'Required if **type** is not **DEVICES**'
      responses: 
        "200":
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/service/activate/{atoken}/{sname}/{active}': 
    get: 
      tags:
        - Cluster
      summary: Activate / Deactivate Service
      operationId: "activateService"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: sname
          in: path
          required: true
          type: string
        - name: active
          in: path
          description: Boolean to activate or deactivate
          required: true
          type: boolean
        - name: domainKey
          in: query
          required: false
          type: string
          description: 'Required if the service is a domain specific service'
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Counter"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/counter/upsert/{dkey}':
    post:
      tags:
        - Cluster
      summary: Create Update Domain Counter
      operationId: upsertDomainCounter
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: dkey
          in: path
          description: Domain key of the instance
          required: true
          type: string
        - name: counter
          in: body
          description: DomainCounter JSON object
          required: true
          schema:
            $ref: '#/definitions/DomainCounter'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/process/check': 
    get: 
      tags:
        - Cluster
      summary: Get Cluster Process Check
      operationId: "getClusterProcessCheck"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: minterval
          in: query
          required: false
          type: integer
          format: int64
        - name: pinterval
          in: query
          required: false
          type: integer
          format: int64
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Counter"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/domain/list/{atoken}': 
    get: 
      tags:
        - Cluster
      summary: List Cluster Domains
      operationId: "listClusterDomains"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ClusterDomains"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/domain/add/{atoken}/{dkey}': 
    get: 
      tags:
        - Cluster
      summary: Add Cluster Domain
      operationId: "addClusterDomain"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: path
          description: Domain Key
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ClusterDomains"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/cluster/domain/remove/{atoken}/{dkey}': 
    get: 
      tags:
        - Cluster
      summary: Remove Cluster Domain
      operationId: "removeClusterDomain"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: path
          description: Domain Key
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/ClusterDomains"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/email/{atoken}':
    post:
      tags:
        - Settings
      summary: Create / Update Email Gateway
      operationId: upsertEmailGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: EmailGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/EmailGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/email/{atoken}':
    get:
      tags:
        - Settings
      summary: Get Email Gateway
      operationId: getEmailGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/EmailGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/twilio/{atoken}':
    post:
      tags:
        - Settings
      summary: Create / Update Twilio Gateway
      operationId: upsertTwilioGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: TwilioGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/TwilioGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/twilio/{atoken}':
    get:
      tags:
        - Settings
      summary: Get Twilio Gateway
      operationId: getTwilioGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/TwilioGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/fcm/{atoken}':
    post:
      tags:
        - Settings
      summary: Create / Update FCM Gateway
      operationId: upsertFCMGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: FCMGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/FCMGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/fcm/{atoken}':
    get:
      tags:
        - Settings
      summary: Get FCM Gateway
      operationId: getFCMGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/FCMGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/set/udp/{atoken}':
    post:
      tags:
        - Settings
      summary: Create / Update UDP Gateway
      operationId: upsertUDPGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: UDPGateway JSON object
          required: true
          schema:
            $ref: '#/definitions/UDPGateway'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/settings/get/udp/{atoken}':
    get:
      tags:
        - Settings
      summary: Get UDP Gateway
      operationId: getUDPGateway
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: '#/definitions/UDPGateway'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fcm/register/{atoken}/{did}/{model}/{version}/{token}':
    get:
      tags:
        - FCM Device
      summary: Register / Update New FCM Device
      operationId: upsertFCMDevice
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: did
          in: path
          description: Device ID
          required: true
          type: string
        - name: model
          in: path
          description: Device model id
          required: true
          type: string
        - name: version
          in: path
          description: Firmware version
          required: true
          type: string
        - name: token
          in: path
          description: Google Firebase Token
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/fcm/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - FCM Device
      summary: Search FCMs
      operationId: searchFCMs
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/auth': 
    post: 
      tags:
        - EMQTT / EMQX
      summary: EMQTT Authenticate
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "emqttAuthenticate"
      parameters:
        - name: clientid
          description: MQTT Client ID
          in: formData
          required: true
          type: string
        - name: username
          description: MQTT User Name
          in: formData
          required: true
          type: string
        - name: password
          description: MQTT Password
          in: formData
          required: true
          type: string
        - name: ipaddress
          description: Source IP Address
          in: formData
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/superuser': 
    post: 
      tags:
        - EMQTT / EMQX
      summary: Is EMQTT Super User
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "isEMQTTSuperUser"
      parameters:
        - name: clientid
          description: MQTT Client ID
          in: formData
          required: true
          type: string
        - name: username
          description: MQTT User Name
          in: formData
          required: true
          type: string
        - name: ipaddress
          description: Source IP Address
          in: formData
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/get/auth':
    get: 
      tags:
        - EMQTT / EMQX
      summary: EMQTT Authenticate GET
      consumes:
        - text/plain
      produces: 
        - "application/json"
      operationId: "emqttAuthenticateGET"
      parameters:
        - name: clientid
          description: MQTT Client ID
          in: query
          required: true
          type: string
        - name: username
          description: MQTT User Name
          in: query
          required: true
          type: string
        - name: password
          description: MQTT Password
          in: query
          required: true
          type: string
        - name: ipaddress
          description: Source IP Address
          in: query
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/get/superuser': 
    get: 
      tags:
        - EMQTT / EMQX
      summary: Is EMQTT Super User GET
      consumes:
        - text/plain
      produces: 
        - "application/json"
      operationId: "isEMQTTSuperUserGET"
      parameters:
        - name: clientid
          description: MQTT Client ID
          in: query
          required: true
          type: string
        - name: username
          description: MQTT User Name
          in: query
          required: true
          type: string
        - name: ipaddress
          description: Source IP Address
          in: query
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/acl': 
    get: 
      tags:
        - EMQTT / EMQX
      summary: Is Emqtt MQTT Authorized
      consumes:
        - text/plain
      produces: 
        - "application/json"
      operationId: "isEmqttMQTTAuthorized"
      parameters:
        - name: username
          description: MQTT User Name
          in: query
          required: true
          type: string
        - name: topic
          description: Requesting Topic
          in: query
          required: true
          type: string
        - name: clientid
          description: MQTT Client ID
          in: query
          required: true
          type: string
        - name: access
          description: 'sub = 1, pub = 2'
          in: query
          required: true
          type: integer
          format: int32
        - name: ipaddr
          in: query
          description: Requesting IP Address
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/emqtt/post/acl':
    post: 
      tags:
        - EMQTT / EMQX
      summary: Is Emqtt MQTT Authorized POST
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "isEmqttMQTTAuthorizedPOST"
      parameters:
        - name: username
          description: MQTT User Name
          in: formData
          required: true
          type: string
        - name: topic
          description: Requesting Topic
          in: formData
          required: true
          type: string
        - name: clientid
          description: MQTT Client ID
          in: formData
          required: true
          type: string
        - name: access
          description: 'sub = 1, pub = 2'
          in: formData
          required: true
          type: integer
          format: int32
        - name: ipaddr
          in: formData
          description: Requesting IP Address
          required: false
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mosquitto/auth': 
    post: 
      tags:
        - Mosquitto
      summary: Mosquitto MQTT Authenticate
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "mosquittoAuthenticate"
      parameters:
        - name: clientid
          in: formData
          description: MQTT Client ID
          required: true
          type: string
        - name: username
          in: formData
          description: MQTT User Name
          required: true
          type: string
        - name: password
          in: formData
          description: MQTT Password
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mosquitto/superuser': 
    post: 
      tags:
        - Mosquitto
      summary: Is Mosquitto MQTT Super User
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "isMosquittoMQTTSuperUser"
      parameters:
        - name: clientid
          in: formData
          description: MQTT Client ID
          required: true
          type: string
        - name: username
          in: formData
          description: MQTT User Name
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/mosquitto/acl': 
    post: 
      tags:
        - Mosquitto
      summary: Mosquitto MQTT ACL
      consumes:
        - application/x-www-form-urlencoded
      produces: 
        - "application/json"
      operationId: "isMosquittoMQTTAuthorized"
      parameters:
        - name: username
          in: formData
          description: MQTT User Name
          required: true
          type: string
        - name: topic
          in: formData
          description: Requesting Topic
          required: true
          type: string
        - name: clientid
          in: formData
          description: MQTT Client ID
          required: false
          type: string
        - name: acc
          in: formData
          description: 'sub = 1, pub = 2'
          required: true
          type: integer
          format: int32
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/insert/{atoken}': 
    post: 
      tags:
        - Global
      summary: Create Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "insertGlobalData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: query
          description: UUID if you want to generate by yourself 
          required: false
          type: string
          format: uuid
        - name: data
          in: body
          description: Any data as a string representation
          required: true
          schema:
            $ref: '#/definitions/GlobalData'
      responses: 
        "200":
          description: "GDResult JSON Object"
          schema: 
            $ref: "#/definitions/GDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/update/{atoken}/{id}': 
    post: 
      tags:
        - Global
      summary: Update Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "updateGlobalData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: ID of existing record
          required: true
          type: string
        - name: data
          in: body
          description: Any data as a string representation
          required: true
          schema:
            $ref: '#/definitions/GlobalData'
      responses:
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/get/{id}/{domainKey}': 
    get: 
      tags:
        - Global
      summary: Get Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "getGlobalData"
      parameters:
        - name: id
          in: path
          description: Unique ID of the data
          required: true
          type: string
        - name: domainKey
          in: path
          description: Domain Key associated with the data
          required: true
          type: string
      responses: 
        "200":
          description: "GlobalData JSON Object"
          schema: 
            $ref: "#/definitions/GlobalData"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/data/delete/{atoken}/{id}': 
    delete: 
      tags:
        - Global
      summary: Delete Global Data
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "deleteGlobalData"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: ID of existing record
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/context/list': 
    get: 
      tags:
        - Global
      summary: List all Rules Engine Contexts
      operationId: "listAllRulesEngineContexts"
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: filter
          in: query
          description: filter by context name
          required: false
          type: string
      responses: 
        "200":
          description: "ContextList Object"
          schema: 
            $ref: "#/definitions/ContextList"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/global/swagger/spec/file/download':
    get:
      tags:
        - Swagger 
      summary: Download Swagger Specification File
      operationId: downloadSwaggerSpecFile
      parameters:
        - name: astext
          in: query
          description: download as text content instead of file
          required: false
          type: boolean
      responses:
        '200':
          description: Swagger Spec file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/record/insert/static/{atoken}/{rid}/{rkey}':
    post:
      tags:
        - Record
      summary: Insert/Update Record With ID
      operationId: upsertRecordWithID
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int64
        - name: rkey
          in: path
          description: Record's unique identifier
          required: true
          type: string
        - name: data
          in: body
          description: Stringified record JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InsertResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/record/insert/dynamic/{atoken}/{rid}':
    post:
      tags:
        - Record
      summary: Insert/Update Record
      operationId: upsertRecord
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int64
        - name: data
          in: body
          description: Stringified record JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/InsertResult'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/record/get/{atoken}/{rid}/{id}':
    get:
      tags:
        - Record
      summary: Retrieve Record
      operationId: retrieveRecord
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int64
        - name: id
          in: path
          description: ID of the record
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/record/delete/{atoken}/{rid}/{rkey}':
    delete:
      tags:
        - Record
      summary: Delete Record
      operationId: deleteRecord
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int64
        - name: rkey
          in: path
          description: Record's unique identifier
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/record/clear/{atoken}/{rid}':
    delete:
      tags:
        - Record
      summary: Delete All Records
      operationId: deleteAllRecords
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rid
          in: path
          description: Well defined unique record ID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/execute/{atoken}':
    post:
      tags:
        - Call
      summary: Execute groovy script
      operationId: executeGroovyScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: GroovyScript JSON
          required: true
          schema:
            $ref: "#/definitions/GroovyScript"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/CallOutput"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/execute/template/{atoken}':
    post:
      tags:
        - Call
      summary: Execute Template Script
      operationId: executeTemplateScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: TemplateScript JSON
          required: true
          schema:
            $ref: "#/definitions/TemplateScript"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/CallOutput"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/execute/rule/{atoken}':
    post:
      tags:
        - Call
      summary: Execute Named Rule Script
      operationId: executeNamedRuleScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: RuleScript JSON
          required: true
          schema:
            $ref: "#/definitions/RuleScript"
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/CallOutput"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/v2/execute/{atoken}':
    post:
      tags:
        - Call
      summary: Execute V2 groovy script
      operationId: executeV2GroovyScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: GroovyScript JSON
          required: true
          schema:
            $ref: "#/definitions/GroovyScriptV2"
      responses:
        '200':
          description: successful operation
          schema: 
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/v2/execute/template/{atoken}':
    post:
      tags:
        - Call
      summary: Execute V2 Template Script
      operationId: executeV2TemplateScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: TemplateScript JSON
          required: true
          schema:
            $ref: "#/definitions/TemplateScriptV2"
      responses:
        '200':
          description: successful operation
          schema: 
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/call/v2/execute/rule/{atoken}':
    post:
      tags:
        - Call
      summary: Execute V2 Named Rule Script
      operationId: executeV2NamedRuleScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: RuleScript JSON
          required: true
          schema:
            $ref: "#/definitions/RuleScriptV2"
      responses:
        '200':
          description: successful operation
          schema: 
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/callv2/execute':
    post:
      tags:
        - Call V2
      summary: Execute groovy script
      operationId: executeGroovyScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: header
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: GroovyScript JSON
          required: true
          schema:
            $ref: "#/definitions/GroovyScriptV2"
      responses:
        '200':
          description: successful operation
          schema: 
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/callv2/execute/template':
    post:
      tags:
        - Call V2
      summary: Execute Template Script
      operationId: executeTemplateScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: header
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: TemplateScript JSON
          required: true
          schema:
            $ref: "#/definitions/TemplateScriptV2"
      responses:
        '200':
          description: successful operation
          schema: 
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/callv2/execute/rule':
    post:
      tags:
        - Call V2
      summary: Execute Named Rule Script
      operationId: executeNamedRuleScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: header
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: script
          in: body
          description: RuleScript JSON
          required: true
          schema:
            $ref: "#/definitions/RuleScriptV2"
      responses:
        '200':
          description: successful operation
          schema: 
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/upload/{atoken}':
    post:
      tags:
        - File
      summary: Upload File
      operationId: uploadFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public access is allowed
          required: false
          type: boolean
        - name: id
          in: query
          description: if id specified, update operation performed
          required: false
          type: string
          format: uuid
        - name: binfile
          in: formData
          description: File binary file content
          type: file
          required: true
        - name: mediaType
          in: formData
          description: Media type of the file
          required: false
          type: string
        - name: tags
          in: formData
          description: Searchable tag names
          required: false
          type: string
        - name: description
          in: formData
          description: File description
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/upload/as/{atoken}':
    post:
      tags:
        - File
      summary: Upload File As
      operationId: uploadFileAs
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: content
          in: body
          description: FileContent JSON object
          required: true
          schema:
            $ref: '#/definitions/FileContent'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/download/{atoken}/{id}':
    get:
      tags:
        - File
      summary: Download file
      operationId: downloadFile
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public file
          required: false
          type: boolean
      responses:
        '200':
          description: Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/content/download/{domainKey}/{id}':
    get:
      tags:
        - File
      summary: Download file Content
      operationId: downloadFileContent
      parameters:
        - name: domainKey
          in: path
          description: Domain key the file belongs
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public file
          required: false
          type: boolean
      responses:
        '200':
          description: Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/content/get/{domainKey}/{id}':
    get:
      tags:
        - File
      summary: Get File Content
      operationId: getFileContent
      parameters:
        - name: domainKey
          in: path
          description: Domain key the file belongs
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public file
          required: false
          type: boolean
        - name: contentType
          in: query
          description: Optional return Content-Type header, default application/octet-stream
          required: false
          type: string
      responses:
        '200':
          description: File content object
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/public/download/{id}':
    get:
      tags:
        - File
      summary: Download Public file
      operationId: downloadPublicFile
      parameters:
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
      responses:
        '200':
          description: Binary file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/delete/{atoken}/{id}':
    delete:
      tags:
        - File
      summary: Delete File
      operationId: deleteFile
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public file
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/files/update/{atoken}/{id}':
    post:
      tags:
        - File
      summary: Update File Info
      operationId: updateFileInfo
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: File unique UUID
          required: true
          type: string
        - name: ispublic
          in: query
          description: True if public file
          required: false
          type: boolean
        - name: tags
          in: query
          description: Tag names
          required: true
          type: string
        - name: description
          in: query
          description: File description
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/compile/script/{atoken}/{ispublic}/{isopen}':
    post:
      tags:
        - Groovy
      summary: Compile Groovy Script
      operationId: compileGroovyScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public script file (admin access)
          required: true
          type: boolean
        - name: isopen
          in: path
          description: True if open source (admin access)
          required: true
          type: boolean
        - name: scriptText
          in: body
          description: Groovy script
          required: true
          schema:
            $ref: '#/definitions/TextContent'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/TextContent"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/upload/script/{atoken}/{ispublic}/{isopen}':
    post:
      tags:
        - Groovy
      summary: Upload Groovy Script
      operationId: uploadGroovyScript
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public script file (admin access)
          required: true
          type: boolean
        - name: isopen
          in: path
          description: True if open source (admin access)
          required: true
          type: boolean
        - name: scriptText
          in: body
          description: Groovy script
          required: true
          schema:
            $ref: '#/definitions/TextContent'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/TextContent"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/upload/script/file/{atoken}/{ispublic}/{isopen}':
    post:
      tags:
        - Groovy
      summary: Upload Groovy Script File
      operationId: uploadGroovyScriptFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public script file (admin access)
          required: true
          type: boolean
        - name: isopen
          in: path
          description: True if open source (admin access)
          required: true
          type: boolean
        - name: scriptFile
          in: formData
          description: Groovy script file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/TextContent"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/upload/jar/{atoken}/{ispublic}/{name}':
    post:
      tags:
        - Groovy
      summary: Upload Groovy Jar File
      operationId: uploadGroovyJarFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public access is allowed (admin access)
          required: true
          type: boolean
        - name: name
          in: path
          description: Jar file name
          required: true
          type: string
        - name: jarFile
          in: formData
          description: Binary Jar File
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/delete/jar/{atoken}/{ispublic}/{name}':
    delete:
      tags:
        - Groovy
      summary: Delete Groovy Jar File
      operationId: deleteGroovyJarFile
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public jar file (admin access)
          required: true
          type: boolean
        - name: name
          in: path
          description: Jar file name
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/groovy/delete/script/{atoken}/{ispublic}/{name}':
    delete:
      tags:
        - Groovy
      summary: Delete Groovy Script File
      operationId: deleteGroovyScriptFile
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ispublic
          in: path
          description: True if public script file (admin access)
          required: true
          type: boolean
        - name: name
          in: path
          description: Script file name (package.classname)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/audit/upsert/{atoken}':
    post:
      tags:
        - Audit
      summary: Create / Update Audit
      operationId: upsertAudit
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: Audit JSON object
          required: true
          schema:
            $ref: '#/definitions/Audit'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/audit/delete/{atoken}/{id}':
    delete:
      tags:
        - Audit
      summary: Delete Audit
      operationId: deleteAudit
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Audit ID (uuid)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/audit/clear/{atoken}':
    delete:
      tags:
        - Audit
      summary: Delete All Aduits
      operationId: deleteAllAduits
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/notification/upsert/{atoken}':
    post:
      tags:
        - Notification
      summary: Create / Update Notification
      operationId: upsertNotification
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: Notification JSON object
          required: true
          schema:
            $ref: '#/definitions/Notification'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/notification/remove/{atoken}/{id}':
    post:
      tags:
        - Notification
      summary: Remove Notification
      operationId: removeNotification
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Notification ID (uuid)
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/notification/clear/{atoken}':
    post:
      tags:
        - Notification
      summary: Remove All Notifications
      operationId: removeAllNotifications
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/notification/search/{atoken}/{page}/{pageSize}':
    post:
      tags:
        - Notification
      summary: Search Notifications
      operationId: searchNotifications
      consumes:
        - "application/json"
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: page
          in: path
          description: Page index
          required: true
          type: integer
          format: int32
        - name: pageSize
          in: path
          description: Maximum number of entities to be listed, max 250
          required: true
          type: integer
          format: int32
        - name: filter
          in: body
          description: Optional SearchQuery JSON object, **domainKey** field must be in the search
          required: false
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/SearchResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/widget/upsert/{atoken}':
    post:
      tags:
        - Widget
      summary: Create / Update Widget
      operationId: upsertWidget
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Widget JSON object
          required: true
          schema:
            $ref: '#/definitions/Widget'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/widget/delete/{atoken}/{wid}':
    delete:
      tags:
        - Widget
      summary: Delete Widget
      operationId: deleteWidget
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: wid
          in: path
          description: Widget Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/widget/search/query':
    post:
      tags:
        - Widget
      summary: Search Widget By Query
      operationId: searchWidgetByQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: versions
          in: query
          required: false
          type: boolean
          description: 'true to search the widget versions index'
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/widget/search/template':
    post:
      tags:
        - Widget
      summary: Search Widget by Template
      operationId: searchWidgetByTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: versions
          in: query
          required: false
          type: boolean
          description: 'true to search the widget versions index'
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/widget/import/{atoken}/{wid}':
    get:
      tags:
        - Widgwet
      summary: Import Widget
      operationId: importWidget
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: wid
          in: path
          description: Widget Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/widget/imported/delete/{atoken}/{wid}':
    delete:
      tags:
        - Widget
      summary: Delete Imported Widget
      operationId: deleteImportedWidget
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: wid
          in: path
          description: Imported Widget Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/auth/push/token': 
    post: 
      tags:
        - Authentication
      summary: Push Auth Token
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "pushAuthToken"
      parameters:
        - name: etoken
          in: body
          description: ExternalAuthToken JSON object
          required: true
          schema:
            $ref: '#/definitions/ExternalAuthToken'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/auth/touch/{atoken}/{expireAt}': 
    get: 
      tags:
        - Authentication
      summary: Touch Auth Token
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "touchAuthToken"
      parameters:
        - name: atoken
          in: path
          description: External Auth Token
          required: true
          type: string
        - name: expireAt
          in: path
          description: Token Expiry Time in millis
          required: true
          type: integer
          format: int64
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/auth/expire/{atoken}': 
    delete: 
      tags:
        - Authentication
      summary: Expire Auth Token
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "expireAuthToken"
      parameters:
        - name: atoken
          in: path
          description: External Auth Token
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/auth/login/push/token': 
    post: 
      tags:
        - Authentication
      summary: Push Login Auth Token
      consumes:
        - "application/json"
      produces:
        - "application/json"
      operationId: "pushLoginAuthToken"
      parameters:
        - name: etoken
          in: body
          description: ExternalAuthToken JSON object
          required: true
          schema:
            $ref: '#/definitions/ExternalAuthToken'
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/UserDomain"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/alexa/upsert/{atoken}':
    post:
      tags:
        - Alexa
      summary: Create / Update Alexa
      operationId: upsertAlexa
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: Alexa JSON object
          required: true
          schema:
            $ref: '#/definitions/Alexa'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/alexa/delete/{atoken}/{id}':
    delete:
      tags:
        - Alexa
      summary: Delete Alexa
      operationId: deleteAlexa
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/screen/upsert/{atoken}':
    post:
      tags:
        - Screen
      summary: Create / Update Screen
      operationId: upsertScreen
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: Screen JSON object
          required: true
          schema:
            $ref: '#/definitions/Screen'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/screen/delete/{atoken}/{sid}':
    delete:
      tags:
        - Screen
      summary: Delete Screen
      operationId: deleteScreen
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: sid
          in: path
          description: Screen Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/screen/search/query':
    post:
      tags:
        - Screen
      summary: Search Screen By Query
      operationId: searchScreenByQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: versions
          in: query
          required: false
          type: boolean
          description: 'true to search the screen versions index'
        - name: query
          in: body
          description: SearchQuery JSON
          required: true
          schema:
            $ref: '#/definitions/SearchQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/screen/search/template':
    post:
      tags:
        - Screen
      summary: Search Screen by Template
      operationId: searchScreenByTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: versions
          in: query
          required: false
          type: boolean
          description: 'true to search the screen versions index'
        - name: query
          in: body
          description: TemplateQuery JSON
          required: true
          schema:
            $ref: '#/definitions/TemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SearchResult'
        '417':
          description: 'API Error'
          schema: 
            $ref: '#/definitions/ApiError'
  '/screen/import/{atoken}/{sid}':
    get:
      tags:
        - Screen
      summary: Import Screen
      operationId: importScreen
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: sid
          in: path
          description: Screen Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/screen/imported/delete/{atoken}/{sid}':
    delete:
      tags:
        - Screen
      summary: Delete Imported Screen
      operationId: deleteImportedScreen
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: sid
          in: path
          description: Imported Screen Id
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/access/check/{atoken}':
    get:
      tags:
        - SQL
      summary: Check SQL Access
      operationId: checkSQLAccess
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Check access for another domain (admin only)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Access'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/access/set/{atoken}/{dkey}/{state}':
    put:
      tags:
        - SQL
      summary: Set SQL Access
      operationId: setSQLAccess
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: path
          description: Enable/Disable SQL access for another domain (admin only)
          required: true
          type: string
        - name: state
          in: path
          required: true
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Access'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/template/upsert/{atoken}':
    post:
      tags:
        - SQL
      summary: Upsert SQL Template
      operationId: upsertSQLTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: SQLTemplate JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLTemplate'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/template/remove/{atoken}/{id}':
    delete:
      tags:
        - SQL
      summary: Delete SQL Template
      operationId: deleteSQLTemplate
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: SQLTemplate ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/template/get/{atoken}/{id}':
    get:
      tags:
        - SQL
      summary: Get SQL Template
      operationId: getSQLTemplate
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: SQLTemplate ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SQLTemplate'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/template/exec/{atoken}':
    post:
      tags:
        - SQL
      summary: Execute SQL Template
      operationId: executeSQLTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: SQLTemplateQuery JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLTemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/template/exec/multi/{atoken}':
    post:
      tags:
        - Execute Multiple SQL Templates
      summary: Execute Multiple SQL Templates
      operationId: executeMultiSQLTemplates
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: SQLMultiTemplateQuery JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLMultiTemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/exec/{atoken}':
    post:
      tags:
        - Execute SQL Query
      summary: Execute SQL Query
      operationId: executeSQLQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: SQLQuery JSON object
          required: false
          schema:
            $ref: '#/definitions/SQLQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/exec/multi/{atoken}':
    post:
      tags:
        - Execute Multiple SQL Queries
      summary: Execute Miultiple SQL Queries
      operationId: executeSQLQueries
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: SQLMultiQuery JSON object
          required: false
          schema:
            $ref: '#/definitions/SQLMultiQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/create/{atoken}':
    post:
      tags:
        - Create SQL Table
      summary: Create SQL Table
      operationId: createSQLTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: ignore
          in: query
          description: Ignore if already exists
          required: false
          type: boolean
        - name: entity
          in: body
          description: SQLTable JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLTable'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/field/add/{atoken}/{table}':
    post:
      tags:
        - Add SQL Table Field
      summary: Add SQL Table Field
      operationId: addSQLTableField
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: table
          in: path
          description: Table name (lower case)
          required: true
          type: string
        - name: entity
          in: body
          description: SQLField JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLField'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/field/drop/{atoken}/{table}/{field}':
    delete:
      tags:
        - Drop SQL Table Field
      summary: Drop SQL Table Field
      operationId: dropSQLTableField
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: table
          in: path
          description: Table name (lower case)
          required: true
          type: string
        - name: field
          in: path
          description: Field name (lower case)
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/index/create/{atoken}/{table}/{field}':
    put:
      tags:
        - Create SQL Table Index
      summary: Create SQL Table Index
      operationId: createSQLTableIndex
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: table
          in: path
          description: Table name (lower case)
          required: true
          type: string
        - name: field
          in: path
          description: Field name (lower case)
          required: true
          type: string
        - name: sortDesc
          in: query
          description: Sort by descending order
          required: false
          type: boolean
        - name: ignore
          in: query
          description: Ignore if already exists
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/index/drop/{atoken}/{table}/{field}':
    delete:
      tags:
        - Drop SQL Table Index
      summary: Drop SQL Table Index
      operationId: dropSQLTableIndex
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: table
          in: path
          description: Table name (lower case)
          required: true
          type: string
        - name: field
          in: path
          description: Field name (lower case)
          required: true
          type: string
        - name: ignore
          in: query
          description: Ignore if not exists
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/drop/{atoken}/{table}':
    delete:
      tags:
        - Drop SQL Table
      summary: Drop SQL Table
      operationId: dropSQLTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: table
          in: path
          description: Table name (lower case)
          required: true
          type: string
        - name: ignore
          in: query
          description: Ignore if not exists
          required: false
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/insert/record/{atoken}':
    post:
      tags:
        - Insert a Record Into SQL Table
      summary: Insert a Record Into SQL Table
      operationId: insertRecordIntoSQLTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: SQLRecord JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLRecord'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/insert/multi/records/{atoken}/{stream}':
    post:
      tags:
        - Insert Multiple Records Into SQL Table
      summary: Insert Multiple Records Into SQL Table
      operationId: insertMultiRecordsIntoSQLTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: stream
          in: path
          description: If streaming enabled, merge in inserts will be ignored
          required: true
          type: boolean
        - name: entity
          in: body
          description: SQLMultiRecord JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLMultiRecord'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/table/insert/multi/table/records/{atoken}/{stream}':
    post:
      tags:
        - Insert Multiple Records Into Multiple SQL Table
      summary: Insert Multiple Records Into Multiple SQL Table
      operationId: insertMultiRecordsIntoMultipleSQLTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: stream
          in: path
          description: If streaming enabled, merge in inserts will be ignored
          required: true
          type: boolean
        - name: entity
          in: body
          description: SQLMultiTableRecords JSON object
          required: true
          schema:
            $ref: '#/definitions/SQLMultiTableRecords'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/sql/upload/{atoken}/{format}/{tableName}/{stream}':
    post:
      tags:
        - Upload a File to SQL Table(s)
      summary: Upload a CSV or SQL Statements File to SQL Table(s)
      operationId: uploadSQLFile
      consumes:
        - multipart/form-data
      produces:
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: format
          in: path
          required: true
          type: string
          description: One of (CSV, CSV_RFC4180, CSV_EXCEL, CSV_EXCEL_WITH_HEADER, INFORMIX_UNLOAD, CSV_INFORMIX_UNLOAD, CSV_MYSQL, CSV_ORACLE, CSV_POSTGRESQL, POSTGRESQL_TEXT, TDF, SQL_STATEMENTS)
        - name: tableName
          in: path
          description: Table name, required if format is not SQL_STATEMENTS. Give a dummy name for SQL_STATEMENTS format
          required: true
          type: string
        - name: stream
          in: path
          description: If streaming enabled, only insert statements are allowed in SQL_STATEMENTS
          required: true
          type: boolean
        - name: fields
          in: formData
          description: Comma separated field names, required if format is not SQL_STATEMENTS
          required: false
          type: string
        - name: csvBOM
          in: formData
          description: To handle files that start with a Byte Order Mark (BOM) like some Excel CSV files
          required: false
          type: boolean
        - name: csvArgs
          in: formData
          description: Optional CSVArgs JSON
          required: false
          type: string
        - name: content
          in: formData
          description: File content
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/license/download/{domainKey}/{apiKey}':
    get:
      tags:
        - License
      summary: Download License file
      operationId: downloadLicenseFile
      produces:
        - "application/octet-stream"
      parameters:
        - name: domainKey
          in: path
          description: Domain Key
          required: true
          type: string
        - name: apiKey
          in: path
          description: API Key
          required: true
          type: string
      responses:
        '200':
          description: Binary License file
          schema:
            type: file
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/access/check/{atoken}':
    get:
      tags:
        - Database
      summary: Check Database Access
      operationId: checkDBAccess
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: query
          description: Check access for another domain (admin only)
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Access'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/access/set/{atoken}/{dkey}/{state}':
    put:
      tags:
        - Database
      summary: Set Database Access
      operationId: setDBAccess
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dkey
          in: path
          description: Enable/Disable SQL access for another domain (admin only)
          required: true
          type: string
        - name: state
          in: path
          required: true
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Access'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/pool/sync/{atoken}':
    get:
      tags:
        - Database
      summary: Sync Database Metadata
      operationId: syncDBMetadata
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pool
          in: query
          description: Sync a specific connection pool
          required: false
          type: string
        - name: async
          in: query
          description: Sync in background
          required: true
          type: boolean
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/pool/upsert/{atoken}':
    post:
      tags:
        - Database
      summary: Upsert Database Connection Pool
      operationId: upsertDBConnectionPool
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: ConnectionPool JSON object
          required: true
          schema:
            $ref: '#/definitions/ConnectionPool'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/pool/remove/{atoken}/{id}':
    delete:
      tags:
        - Database
      summary: Delete Database Connection Pool
      operationId: deleteDBConnectionPool
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Connection Pool ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/pool/get/{atoken}/{id}':
    get:
      tags:
        - Database
      summary: Get Database Connection Pool
      operationId: getDBConnectionPool
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Connection Pool ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/ConnectionPool'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/template/upsert/{atoken}':
    post:
      tags:
        - Database
      summary: Upsert Database Template
      operationId: upsertDBTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBTemplate JSON object
          required: true
          schema:
            $ref: '#/definitions/DBTemplate'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/template/remove/{atoken}/{id}':
    delete:
      tags:
        - Database
      summary: Delete Database Template
      operationId: deleteDBTemplate
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: DBTemplate ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/template/get/{atoken}/{id}':
    get:
      tags:
        - Database
      summary: Get Database Template
      operationId: getDBTemplate
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: DBTemplate ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/DBTemplate'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/template/exec/{atoken}':
    post:
      tags:
        - Database
      summary: Execute Database Template
      operationId: executeDBTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBTemplateQuery JSON object
          required: true
          schema:
            $ref: '#/definitions/DBTemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/template/exec/multi/{atoken}':
    post:
      tags:
        - Database
      summary: Execute Multiple Database Templates
      operationId: executeMultiDBTemplates
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBMultiTemplateQuery JSON object
          required: true
          schema:
            $ref: '#/definitions/DBMultiTemplateQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/exec/{atoken}':
    post:
      tags:
        - Database
      summary: Execute DB Query
      operationId: executeDBQuery
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: DBQuery JSON object
          required: false
          schema:
            $ref: '#/definitions/DBQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/exec/multi/{atoken}':
    post:
      tags:
        - Database
      summary: Execute Miultiple DB Queries
      operationId: executeDBQueries
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: query
          in: body
          description: DBMultiQuery JSON object
          required: false
          schema:
            $ref: '#/definitions/DBMultiQuery'
      responses:
        '200':
          description: successful operation
          schema:
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/insert/{atoken}':
    post:
      tags:
        - Database
      summary: Insert a Row Into DB Table
      operationId: insertRowIntoDBTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBRecord JSON object
          required: true
          schema:
            $ref: '#/definitions/DBRecord'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/update/{atoken}':
    post:
      tags:
        - Database
      summary: Insert a Row in the DB Table
      operationId: updateRowInTheDBTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBUpdateRecord JSON object
          required: true
          schema:
            $ref: '#/definitions/DBUpdateRecord'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/insert/multi/{atoken}':
    post:
      tags:
        - Database
      summary: Insert Multiple Rows Into DB Table
      operationId: insertMultiRowsIntoDBTable
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBMultiRecord JSON object
          required: true
          schema:
            $ref: '#/definitions/DBMultiRecord'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/db/insert/multi/table/{atoken}':
    post:
      tags:
        - Database
      summary: Insert Multiple Rows Into Multiple DB Tables
      operationId: insertMultiRowsIntoMultipleDBTables
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: entity
          in: body
          description: DBMultiTableRecords JSON object
          required: true
          schema:
            $ref: '#/definitions/DBMultiTableRecords'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/upsert/{atoken}':
    post:
      tags:
        - Binaray Rule
      summary: Create / Update Binaray Rule
      operationId: upsertBinarayRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: BinaryRule JSON object
          required: true
          schema:
            $ref: '#/definitions/BinaryRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/get/{atoken}/{type}':
    get:
      tags:
        - Binaray Rule
      summary: Retreive Binary Rule
      operationId: getBinaryRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: Binary rule identifier type
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/BinaryRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/delete/{atoken}/{type}':
    delete:
      tags:
        - Binaray Rule
      summary: Delete Binary Rule
      operationId: deleteBinaryRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: Binary rule identifier type
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/delete/all/{atoken}':
    delete:
      tags:
        - Binaray Rule
      summary: Delete All Binary Rules
      operationId: deleteAllBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/list/{atoken}/{pageSize}':
    get:
      tags:
        - Binaray Rule
      summary: List Binary Rules
      operationId: listBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **type** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: type
          in: query
          description: >-
            Last or First message type of the previous list operation, **required** if **direction** is specified
          required: false
          type: string      
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/BinaryRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/brules/count/{atoken}':
    get:
      tags:
        - Binaray Rule
      summary: Count All Binary Rules
      operationId: countAllBinaryRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/system/property/upsert/{atoken}':
    post:
      tags:
        - System
      summary: Create / Update System Property
      operationId: storeSystemProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: SystemProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/SystemProperty'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/system/property/get/{atoken}/{name}':
    get:
      tags:
        - System
      summary: Retreive System Property
      operationId: getSystemProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/SystemProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/system/property/delete/{atoken}/{name}':
    delete:
      tags:
        - System
      summary: Delete Stored System Property
      operationId: deleteSystemProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/system/property/deleteall/{atoken}':
    delete:
      tags:
        - System
      summary: Delete All Stored System Properties
      operationId: deleteAllSystemProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/system/property/list/{atoken}/{pageSize}':
    get:
      tags:
        - System
      summary: List System Properties
      operationId: listSystemProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/SystemProperty'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/plugin/upload/{atoken}':
    post:
      tags:
        - Plugin
      summary: Upload Plugin
      operationId: uploadPlugin
      consumes:
        - multipart/form-data
      produces:
        - text/plain
        - application/json
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: binfile
          in: formData
          description: Plugin jar file
          type: file
          required: true
      responses:
        '200':
          description: successful operation
          schema: 
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/plugin/config/set/{atoken}/{id}':
    post:
      tags:
        - Plugin
      summary: Update Plugin Configuration
      operationId: updatePluginConfiguration
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Plugin ID
          required: true
          type: string
        - name: entity
          in: body
          description: Configuration JSON object
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/plugin/config/get/{atoken}/{id}':
    get:
      tags:
        - Plugin
      summary: Get Plugin Configuration
      operationId: getPluginConfiguration
      consumes:
        - "application/json"
      produces:
        - "text/plain"
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Plugin ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/plugin/get/{atoken}/{id}':
    get:
      tags:
        - Plugin
      summary: Get Plugin
      operationId: getPlugin
      consumes:
        - "application/json"
      produces:
        - "text/plain"
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Plugin ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            type: string
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/upsert/{atoken}': 
    post: 
      tags:
        - Organization
      summary: Create or update Organization
      operationId: upsertOrganization
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: "#/definitions/Organization"
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/get/{atoken}/{orgId}': 
    get: 
      tags:
        - Organization
      summary: Get Organization
      operationId: getOrganization
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/Organization"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/list/{atoken}/{pageSize}':
    get:
      tags:
        - Organization
      summary: List Organizations
      operationId: listOrganizations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: pageSize
          in: path
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **orgId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: orgId
          in: query
          description: >-
            Last or First orgId of the previous list operation, **required** if **direction** is specified
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/Organization'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/delete/{atoken}/{orgId}': 
    delete: 
      tags:
        - Organization
      summary: Delete Organization
      operationId: deleteOrganization
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses: 
        "200":
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/deleteall/{atoken}':
    delete:
      tags:
        - Organization
      summary: Delete All Organizations
      operationId: deleteAllOrganizations
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/property/upsert/{atoken}':
    post:
      tags:
        - Organization
      summary: Create / Update Organization Property
      operationId: storeOrganizationProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in domain
          required: true
          type: string
        - name: entity
          in: body
          description: OrganizationProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/OrganizationProperty'
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/property/get/{atoken}/{orgId}/{name}':
    get:
      tags:
        - Organization
      summary: Retreive Organization Property
      operationId: getOrganizationProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/OrganizationProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/property/list/{atoken}/{orgId}/{pageSize}':
    get:
      tags:
        - Organization
      summary: List Organization Properties
      operationId: listOrganizationProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/property/delete/{atoken}/{orgId}/{name}':
    delete:
      tags:
        - Organization
      summary: Delete Stored Organization Property
      operationId: deleteOrganizationProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/property/deleteall/{atoken}/{orgId}':
    delete:
      tags:
        - Organization
      summary: Delete All Stored Organization Properties
      operationId: deleteAllOrganizationProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/role/upsert/{atoken}':
    post:
      tags:
        - Organization Role
      summary: Create / Update Organization Role
      operationId: upsertOrganizationRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganizationRole'
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/role/get/{atoken}/{orgId}/{roleId}': 
    get: 
      tags:
        - Organization Role
      summary: Get Organization Role
      operationId: getOrganizationRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: roleId
          in: path
          required: true
          type: string
      responses: 
        "200":
          description: "Success"
          schema:
            $ref: "#/definitions/OrganizationRole"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/role/list/{atoken}/{orgId}/{pageSize}':
    get:
      tags:
        - Organization Role
      summary: List Organization Roles
      operationId: listOrganizationRoles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **roleId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: roleId
          in: query
          description: >-
            Last or First roleId name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationRole'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/role/delete/{atoken}/{orgId}/{roleId}':
    delete:
      tags:
        - Organization Role
      summary: Delete Organization Role
      operationId: deleteOrganizationRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: roleId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/role/deleteall/{atoken}/{orgId}':
    delete:
      tags:
        - Organization Role
      summary: Delete All Organization Roles
      operationId: deleteAllOrganizationRoles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/link/{atoken}/{orgId}/{assetId}':
    post:
      tags:
        - Organization Asset
      summary: Link Organization Asset
      operationId: linkOrganizationAsset
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/get/{atoken}/{orgId}/{assetId}':
    get:
      tags:
        - Organization Asset
      summary: Retreive Organization Asset
      operationId: getOrganizationAsset
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/OrganizationAsset'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/list/{atoken}/{orgId}/{pageSize}':
    get:
      tags:
        - Organization Asset
      summary: List Organization Assets
      operationId: listOrganizationAssets
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **assetId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: assetId
          in: query
          description: >-
            Last or First assetId of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationAsset'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/unlink/{atoken}/{orgId}/{assetId}':
    delete:
      tags:
        - Organization Asset
      summary: Unlink Organization Asset
      operationId: unlinkOrganizationAsset
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/unlinkall/{atoken}/{orgId}':
    delete:
      tags:
        - Organization Asset
      summary: Unlink All Organization Assets
      operationId: unlinkAllOrganizationAssets
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/property/upsert/{atoken}':
    post:
      tags:
        - Organization Asset
      summary: Create / Update Organization Asset Property
      operationId: storeOrganizationAssetProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: entity
          in: body
          description: OrganizationAssetProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/OrganizationAssetProperty'
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/property/get/{atoken}/{orgId}/{assetId}/{name}':
    get:
      tags:
        - Organization Asset
      summary: Retreive Organization Asset Property
      operationId: getOrganizationAssetProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/OrganizationAssetProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/property/list/{atoken}/{orgId}/{assetId}/{pageSize}':
    get:
      tags:
        - Organization Asset
      summary: List Organization Asset Properties
      operationId: listOrganizationAssetProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationAssetProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/property/delete/{atoken}/{orgId}/{assetId}/{name}':
    delete:
      tags:
        - Organization Asset
      summary: Delete Organization Asset Property
      operationId: deleteOrganizationAssetProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/asset/property/deleteall/{atoken}/{orgId}/{assetId}':
    delete:
      tags:
        - Organization Asset
      summary: Delete All Organization Asset Properties
      operationId: deleteAllOrganizationAssetProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: assetId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/link/{atoken}/{orgId}/{deviceId}':
    post:
      tags:
        - Organization Device
      summary: Link Organization Device
      operationId: linkOrganizationDevice
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/get/{atoken}/{orgId}/{deviceId}':
    get:
      tags:
        - Organization Device
      summary: Retreive Organization Device
      operationId: getOrganizationDevice
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/OrganizationDevice'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/list/{atoken}/{orgId}/{pageSize}':
    get:
      tags:
        - Organization Device
      summary: List Organization Devices
      operationId: listOrganizationDevices
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **deviceId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: deviceId
          in: query
          description: >-
            Last or First deviceId of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationDevice'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/unlink/{atoken}/{orgId}/{deviceId}':
    delete:
      tags:
        - Organization Device
      summary: Unlink Organization Device
      operationId: unlinkOrganizationDevice
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/unlinkall/{atoken}/{orgId}':
    delete:
      tags:
        - Organization Device
      summary: Unlink All Organization Devices
      operationId: unlinkAllOrganizationDevices
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/property/upsert/{atoken}':
    post:
      tags:
        - Organization Device
      summary: Create / Update Organization Device Property
      operationId: storeOrganizationDeviceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: entity
          in: body
          description: OrganizationDeviceProperty JSON object
          required: true
          schema:
            $ref: '#/definitions/OrganizationDeviceProperty'
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/property/get/{atoken}/{orgId}/{deviceId}/{name}':
    get:
      tags:
        - Organization Device
      summary: Retreive Organization Device Property
      operationId: getOrganizationDeviceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/OrganizationDeviceProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/property/list/{atoken}/{orgId}/{deviceId}/{pageSize}':
    get:
      tags:
        - Organization Device
      summary: List Organization Device Properties
      operationId: listOrganizationDeviceProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationDeviceProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/property/delete/{atoken}/{orgId}/{deviceId}/{name}':
    delete:
      tags:
        - Organization Device
      summary: Delete Organization Device Property
      operationId: deleteOrganizationDeviceProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/device/property/deleteall/{atoken}/{orgId}/{deviceId}':
    delete:
      tags:
        - Organization Device
      summary: Delete All Organization Device Properties
      operationId: deleteAllOrganizationDeviceProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: deviceId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/link/{atoken}/{orgId}/{userId}':
    post:
      tags:
        - Organization User
      summary: Link Organization User
      operationId: linkOrganizationUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/get/{atoken}/{orgId}/{userId}':
    get:
      tags:
        - Organization User
      summary: Get Organization User
      operationId: getOrganizationUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/User"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/list/{atoken}/{orgId}/{pageSize}':
    get:
      tags:
        - Organization User
      summary: List Organization Users
      operationId: listOrganizationUsers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **userId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: userId
          in: query
          description: >-
            Last or First userId name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationUser'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/unlink/{atoken}/{orgId}/{userId}':
    delete:
      tags:
        - Organization User
      summary: Unlink Organization User
      operationId: unlinkOrganizationUser
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/unlinkall/{atoken}/{orgId}':
    delete:
      tags:
        - Organization User
      summary: Unlink All Organization Users
      operationId: unlinkAllOrganizationUsers
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/role/link/{atoken}/{orgId}/{userId}/{roleId}':
    post:
      tags:
        - Organization User
      summary: Link Organization User Role
      operationId: linkOrganizationUserRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: roleId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/role/get/{atoken}/{orgId}/{userId}/{roleId}':
    get:
      tags:
        - Organization User
      summary: Get Organization User Role
      operationId: getOrganizationUserRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: roleId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/OrganizationRole"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/role/list/{atoken}/{orgId}/{userId}/{pageSize}':
    get:
      tags:
        - Organization User
      summary: List Organization User Roles
      operationId: listOrganizationUserRoles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of users to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **roleId** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: roleId
          in: query
          description: >-
            Last or First roleId name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationUserRole'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/role/unlink/{atoken}/{orgId}/{userId}/{roleId}':
    delete:
      tags:
        - Organization User
      summary: Unlink Organization User Role
      operationId: unlinkOrganizationUserRole
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: roleId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/role/unlinkall/{atoken}/{orgId}/{userId}':
    delete:
      tags:
        - Organization User
      summary: Unlink All Organization User Roles
      operationId: unlinkAllOrganizationUserRoles
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/property/upsert/{atoken}':
    post:
      tags:
        - Organization User
      summary: Create / Update Organization User Property
      operationId: storeOrganizationUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: entity
          in: body
          required: true
          schema:
            $ref: '#/definitions/OrganizationUserProperty'
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/property/get/{atoken}/{orgId}/{userId}/{name}':
    get:
      tags:
        - Organization User
      summary: Retrieve Organization User Property
      operationId: getOrganizationUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            $ref: '#/definitions/OrganizationUserProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/property/list/{atoken}/{orgId}/{userId}/{pageSize}':
    get:
      tags:
        - Organization User
      summary: List Organization User Properties
      operationId: listOrganizationUserProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of properties to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **name** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: name
          in: query
          description: >-
            Last or First property name of the previous list operation, **required** if **direction** is specified
          required: false
          type: string
      responses:
        '200':
          description: "Success"
          schema:
            type: array
            items:
              $ref: '#/definitions/OrganizationUserProperty'
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/property/delete/{atoken}/{orgId}/{userId}/{name}':
    delete:
      tags:
        - Organization User
      summary: Delete Organization User Property
      operationId: deleteOrganizationUserProperty
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/org/user/property/deleteall/{atoken}/{orgId}/{userId}':
    delete:
      tags:
        - Organization User
      summary: Delete All Organization User Properties
      operationId: deleteAllOrganizationUserProperties
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          required: true
          type: string
        - name: orgId
          in: path
          required: true
          type: integer
          format: int64
        - name: userId
          in: path
          required: true
          type: string
      responses:
        '200':
          description: "Success"
          schema: 
            $ref: "#/definitions/BooleanResult"
        "417":
          description: "Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/schedule/upsert/{atoken}':
    post:
      tags:
        - Billing
      summary: Create / Update Billing Schedule
      operationId: upsertBillingSchedule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: BillingSchedule JSON object
          required: true
          schema:
            $ref: '#/definitions/BillingSchedule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/schedule/delete/{atoken}/{id}':
    delete:
      tags:
        - Billing
      summary: Delete Billing Schedule
      operationId: deleteBillingSchedule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/contact/upsert/{atoken}':
    post:
      tags:
        - Billing
      summary: Create / Update Billing Contact
      operationId: upsertBillingContact
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: BillingContact JSON object
          required: true
          schema:
            $ref: '#/definitions/BillingContact'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/contact/delete/{atoken}/{id}':
    delete:
      tags:
        - Billing
      summary: Delete Billing Contact
      operationId: deleteBillingContact
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"

  '/billing/invoice/upsert/{atoken}':
    post:
      tags:
        - Billing
      summary: Create / Update Billing Invoice
      operationId: upsertBillingInvoice
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: BillingInvoice JSON object
          required: true
          schema:
            $ref: '#/definitions/BillingInvoice'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/IDResult"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/invoice/delete/{atoken}/{id}':
    delete:
      tags:
        - Billing
      summary: Delete Billing Invoice
      operationId: deleteBillingInvoice
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/template/upsert/{atoken}':
    post:
      tags:
        - Billing
      summary: Create / Update Billing Template
      operationId: upsertBillingTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: dto
          in: body
          description: BillingTemplate JSON object
          required: true
          schema:
            $ref: '#/definitions/BillingTemplate'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/template/delete/item/{atoken}/{name}/{item}':
    delete:
      tags:
        - Billing
      summary: Delete Billing Template Item
      operationId: deleteBillingTemplateItem
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
        - name: item
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/billing/template/delete/{atoken}/{name}':
    delete:
      tags:
        - Billing
      summary: Delete Billing Template
      operationId: deleteBillingTemplate
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: name
          in: path
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/upsert/{atoken}':
    post:
      tags:
        - Job
      summary: Create / Update Job
      operationId: upsertJob
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: Job JSON object
          required: true
          schema:
            $ref: '#/definitions/Job'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/get/{atoken}/{jobId}':
    get:
      tags:
        - Job
      summary: Get Job
      operationId: getJob
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jobId
          in: path
          description: Job ID
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/delete/{atoken}/{id}':
    delete:
      tags:
        - Job
      summary: Delete Job
      operationId: deleteJob
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Job ID
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/count/{atoken}':
    get:
      tags:
        - Job
      summary: Count Jobs
      operationId: countJobs
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/list/{atoken}':
    get:
      tags:
        - Job
      summary: List Jobs
      operationId: listJobs
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/set/{atoken}/{jobId}/{jobState}':
    put:
      tags:
        - Job
      summary: Set Job State
      operationId: setJobState
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jobId
          in: path
          description: Job ID
          required: true
          type: string
        - name: jobState
          in: path
          description: JobState (ENABLED | DISABLED)
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/running/count/{atoken}/{jobId}':
    get:
      tags:
        - Job
      summary: Count Running Jobs
      operationId: countRunningJobs
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jobId
          in: path
          description: Job ID
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/running/list/{atoken}':
    get:
      tags:
        - Job
      summary: List Running Jobs
      operationId: listRunningJobs
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: query
          description: Job ID
          required: false
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/start/{atoken}/{jobId}':
    get:
      tags:
        - Job
      summary: Start Job
      operationId: startJob
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jobId
          in: path
          description: Job ID
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/restart/{atoken}/{jobId}':
    get:
      tags:
        - Job
      summary: Restart Job
      operationId: restartJob
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jobId
          in: path
          description: Job ID
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/stop/{atoken}/{jobId}':
    get:
      tags:
        - Job
      summary: Stop Job
      operationId: stopJob
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jobId
          in: path
          description: Job ID
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Job'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/{atoken}/{id}/{action}':
    get:
      tags:
        - Job
      summary: Perform Job Action
      operationId: performJobAction
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Job ID
          required: true
          type: string
        - name: action
          in: path
          description: Action (start | stop | restart | list)
          required: true
          type: string
        - name: instance
          in: query
          description: Job Instance ID
          required: false
          type: integer
        - name: instances
          in: query
          description: Job Instances
          required: false
          type: integer
        - name: nodeId
          in: query
          description: Job Node ID
          required: false
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: object
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/jobs/running/count/all/{atoken}':
    get:
      tags:
        - Job
      summary: Count All Running Jobs
      operationId: countAllRunningJobs
      consumes:
        - "text/plain"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: jtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/process/upsert/{atoken}':
    post:
      tags:
        - Process
      summary: Create / Update Process
      operationId: upsertProcess
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: Process JSON object
          required: true
          schema:
            $ref: '#/definitions/Process'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/process/get/{atoken}/{id}':
    get:
      tags:
        - Process
      summary: Retreive Process
      operationId: getProcess
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Process ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Process'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/process/delete/{atoken}/{id}':
    delete:
      tags:
        - Process
      summary: Delete Process
      operationId: deleteProcess
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: Process ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/process/delete/all/{atoken}':
    delete:
      tags:
        - Process
      summary: Delete All Processes
      operationId: deleteAllProcesses
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/process/count/{atoken}':
    post:
      tags:
        - Process
      summary: Count All Processes
      operationId: countAllProcesses
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/upsert/{atoken}':
    post:
      tags:
        - Workflow
      summary: Create / Update Workflow
      operationId: upsertWorkflow
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: Workflow JSON object
          required: true
          schema:
            $ref: '#/definitions/WorkFlow'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/get/{atoken}/{id}':
    get:
      tags:
        - Workflow
      summary: Retreive Workflow
      operationId: getWorkflow
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: orgId
          in: query
          description: Optional organization ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlow'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/delete/{atoken}/{id}':
    delete:
      tags:
        - Workflow
      summary: Delete Workflow
      operationId: deleteWorkflow
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: orgId
          in: query
          description: Optional organization ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/delete/all/{atoken}':
    delete:
      tags:
        - Workflow
      summary: Delete All Workflows
      operationId: deleteAllWorkflows
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: orgId
          in: query
          description: Optional organization ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/count/{atoken}':
    get:
      tags:
        - Workflow
      summary: Count All Workflows
      operationId: countAllWorkflows
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: orgId
          in: query
          description: Optional organization ID
          required: false
          type: integer
          format: int64
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/start/{atoken}/{id}':
    post:
      tags:
        - Workflow
      summary: Start a Workflow
      operationId: startWorkflow
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
        - name: orgId
          in: query
          description: Optional organization ID
          required: false
          type: integer
          format: int64
        - name: instanceId
          in: query
          description: Optional Instance UUID
          required: false
          type: string
          format: uuid
        - name: hasMetaInInput
          in: query
          description: Optional field indicating if meta data is included in Input JSON object
          required: false
          type: boolean
        - name: input
          in: body
          description: Input JSON object
          required: true
          schema:
            type: object
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/pause/{atoken}/{id}':
    post:
      tags:
        - Workflow
      summary: Pause a Workflow Instance
      operationId: pauseWorkflowInstance
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/stop/{atoken}/{id}':
    post:
      tags:
        - Workflow
      summary: Stop a Workflow Instance
      operationId: stopWorkflowInstance
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/terminate/{atoken}/{id}':
    post:
      tags:
        - Workflow
      summary: Terminate a Workflow Instance
      operationId: terminateWorkflowInstance
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/get/{atoken}/{id}':
    get:
      tags:
        - Workflow
      summary: Get Workflow Instance
      operationId: getWorkflowInstance
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/resume/{atoken}/{id}':
    post:
      tags:
        - Workflow
      summary: Resume Workflow
      operationId: resumeWorkflow
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/resume/step/{atoken}/{id}/{stepId}':
    post:
      tags:
        - Workflow
      summary: Resume Workflow Step
      operationId: resumeWorkflowStep
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: stepId
          in: path
          description: Paused WorkFlow Step ID
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/WorkFlowInstance'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/remove/{atoken}/{id}':
    delete:
      tags:
        - Workflow
      summary: Delete Workflow Instance
      operationId: deleteWorkflowInstance
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: id
          in: path
          description: WorkFlow ID
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/workflow/instance/clear/{atoken}':
    delete:
      tags:
        - Workflow
      summary: Delete All Workflow Instances
      operationId: deleteAllWorkflowInstances
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Success'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/frules/upsert/{atoken}':
    post:
      tags:
        - File Rule
      summary: Create / Update File Rule
      operationId: upsertFileRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
        - name: entity
          in: body
          description: FileRule JSON object
          required: true
          schema:
            $ref: '#/definitions/FileRule'
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/frules/get/{atoken}/{type}':
    get:
      tags:
        - File Rule
      summary: Retreive File Rule
      operationId: getFileRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: File rule identifier type (sub folder name)
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/FileRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/frules/delete/{atoken}/{type}':
    delete:
      tags:
        - File Rule
      summary: Delete File Rule
      operationId: deleteFileRule
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: type
          in: path
          description: File rule identifier type (sub folder name)
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/frules/delete/all/{atoken}':
    delete:
      tags:
        - File Rule
      summary: Delete All File Rules
      operationId: deleteAllFileRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Success"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/frules/list/{atoken}/{pageSize}':
    get:
      tags:
        - File Rule
      summary: List File Rules
      operationId: listFileRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: pageSize
          in: path
          description: Maximum number of rules to be listed
          required: true
          type: integer
          format: int32
        - name: direction
          in: query
          description: >-
            If direction is specified, **type** is required
          required: false
          type: string
          enum:
            - NEXT
            - PREV
        - name: type
          in: query
          description: >-
            Last or First message type of the previous list operation, **required** if **direction** is specified
          required: false
          type: string      
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/FileRule'
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
  '/frules/count/{atoken}':
    get:
      tags:
        - File Rule
      summary: Count All File Rules
      operationId: countAllFileRules
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - name: atoken
          in: path
          description: Auth token of the logged in user
          required: true
          type: string
        - name: rtype
          in: query
          description: One of [DOMAIN, GLOBAL, SYSTEM], default is DOMAIN
          required: false
          type: string
      responses:
        '200':
          description: successful operation
          schema: 
            $ref: "#/definitions/Count"
        "417":
          description: "API Error"
          schema: 
            $ref: "#/definitions/ApiError"
definitions: 
  Login:
    required:
      - email
      - password
    properties:
      email:
        type: string
      password:
        type: string
      targetDomainKey:
        type: string
  User:
    required:
      - email
    properties:
      domainKey:
        type: string
      email:
        type: string
      password:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      country:
        type: string
      state:
        type: string
      city:
        type: string
      address:
        type: string
      zipcode:
        type: string
      primaryPhone:
        type: string
      locale:
        type: string
      timezone:
        type: string
      workStart:
        type: integer
        format: int16
      workEnd:
        type: integer
        format: int16
      workDays:
        type: array
        items:
          type: integer
          format: int16
      roles:
        type: array
        items:
          type: string
      groups:
        type: array
        items:
          type: integer
          format: int64
      registeredStamp:
        type: integer
        format: int64
  Domain:
    required:
      - email
    properties:
      domainKey:
        type: string
      email:
        type: string
      country:
        type: string
      state:
        type: string
      city:
        type: string
      address:
        type: string
      zipcode:
        type: string
      primaryPhone:
        type: string
      locale:
        type: string
      timezone:
        type: string
      registeredStamp:
        type: integer
        format: int64
      startId:
        type: integer
        format: int64
  PartDomain:
    properties:
      domainKey:
        type: string
      label:
        type: string
  LinkedDomain:
    required:
    - 'domainKey'
    - 'apiKey'
    - 'token'
    - 'label'
    properties:
      domainKey:
        type: string
      apiKey:
        type: string
      token:
        type: string
      label:
        type: string
  UserDomain:
    required:
      - user
      - domain
      - token
      - domainKey
      - apiKey
    properties:
      user:
        $ref: "#/definitions/User"
      domain:
        $ref: "#/definitions/Domain"
      token:
        type: string
      accessToken:
        type: string
      domainKey:
        type: string
      apiKey:
        type: string
      label:
        type: string
      linkedDomains:
        type: array
        items:
          $ref: "#/definitions/LinkedDomain"
      partDomains:
        type: array
        items:
          $ref: "#/definitions/PartDomain"
      sqlAccess:
        type: boolean
      dbAccess:
        type: boolean
      mongoAccess:
        type: boolean
      cassandraAccess:
        type: boolean
      globalAccess:
        type: boolean
      orgs:
        type: array
        items:
          type: integer
          format: int64
  ApiError: 
    type: "object"
    required: 
      - "code"
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
  Success: 
    type: "object"
    required:
      - code
    properties: 
      code: 
        type: "string"
      message: 
        type: "string"
  BooleanResult: 
    type: "object"
    required:
      - value
    properties: 
      value: 
        type: "boolean"
  UserGroup:
    type: object
    required:
      - userId
      - id
      - name
    properties:
      domainKey:
        type: string
      userId:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      extraProps:
        type: object
  AssetGroup:
    type: object
    required:
      - assetId
      - id
      - name
    properties:
      domainKey:
        type: string
      assetId:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      extraProps:
        type: object
  DomainAssetGroup:
    type: object
    required:
      - id
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      extraProps:
        type: object
  DeviceGroup:
    type: object
    required:
      - id
      - deviceId
      - name
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      deviceId:
        type: string
      name:
        type: string
      extraProps:
        type: object
  DomainDeviceGroup:
    type: object
    required:
      - id
      - name
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      extraProps:
        type: object
  DomainUserGroup:
    type: object
    required:
      - id
      - name
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      email:
        type: string
      primaryPhone:
        type: string
      locale:
        type: string
      timezone:
        type: string
      workStart:
        type: integer
        format: int16
      workEnd:
        type: integer
        format: int16
      workDays:
        type: array
        items:
          type: integer
          format: int16
      extraProps:
        type: object
  DeviceModel:
    type: object
    required:
      - id
      - version
    properties:
      domainKey:
        type: string
      id:
        type: string
      version:
        type: string
      description:
        type: string
      registeredStamp:
        type: integer
        format: int64
  Firmware:
    type: object
    required:
      - deviceModel
      - version
    properties:
      domainKey:
        type: string
      deviceModel:
        type: string
      version:
        type: string
      description:
        type: string
      fileName:
        type: string
      contentType:
        type: string
      createAt:
        type: integer
        format: int64
  Device:
    type: object
    discriminator: deviceType
    required:
      - id
      - modelId
      - version
    properties:
      domainKey:
        type: string
      id:
        type: string
      modelId:
        type: string
      version:
        type: string
      name:
        type: string
      description:
        type: string
      registeredStamp:
        type: integer
        format: int64
      password:
        type: string
      assetId:
        type: string
      reportedStamp:
        type: integer
        format: int64
      reportedIp:
        type: string
      reportedPort:
        type: integer
        format: int32
      nodeId:
        type: string
      nodeUid:
        type: string
        format: uuid
      channel:
        type: string
  FCMDevice:
    allOf:
    - $ref: '#/definitions/Device'
    - type: object
      required:
       - 'fcmToken'
      properties:
        fcmToken:
          type: string
  Asset:
    type: object
    required:
      - id
    properties:
      domainKey:
        type: string
      id:
        type: string
      name:
        type: string
      description:
        type: string
      registeredStamp:
        type: integer
        format: int64
  Template:
    type: object
    required:
    - name
    - lang
    - code
    properties:
      name:
        type: string
      lang:
        type: string
        enum:
          - JTWIG
      code:
        type: string
  Rule:
    type: object
    discriminator: ruleType
    required:
    - lang
    - code
    properties:
      domainKey:
        type: string
      lang:
        type: string
        enum:
          - GROOVY
          - JS
      code:
        type: string
  DomainRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
  MessageRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'messageId'
      properties:
        messageId:
          type: integer
          format: int64
        messageName:
          type: string
  GlobalMessageRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'messageId'
      properties:
        messageId:
          type: string
        messageName:
          type: string
  ScheduledRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'id'
       - 'pattern'
      properties:
        id:
          type: integer
          format: int64
        pattern:
          type: string
  GlobalScheduledRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'id'
       - 'pattern'
      properties:
        id:
          type: string
        pattern:
          type: string
  NamedRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'name'
      properties:
        name:
          type: string
  BinaryRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'type'
      properties:
        type:
          type: string
        description:
          type: string
  FileRule:
    allOf:
    - $ref: '#/definitions/BinaryRule'
    - type: object
      properties:
        rootPath:
          type: string
  DynamicRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'id'
      properties:
        id:
          type: string
          format: uuid
  DynamicNamedRule:
    allOf:
    - $ref: '#/definitions/Rule'
    - type: object
      required:
       - 'id'
       - 'name'
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
  WorkItem:
    type: object
    required:
    - type
    properties:
      id:
        type: string
      type:
        type: string
        enum:
          - WORKFLOW_PROCESS
          - PROCESS
          - TRIGGER
          - TRIGGER_GROUP
          - WORKFLOW
          - STOP
          - TERMINATE
          - PAUSE
      group:
        type: string
  Process:
    type: object
    required:
    - id
    - name
    - code
    - output
    properties:
      id:
        type: string
      name:
        type: string
      language:
        type: string
        enum:
          - GROOVY
          - JAVA_SCRIPT
      code:
        type: string
      description:
        type: string
      group:
        type: string
      domainKey:
        type: string
      tags:
        type: string
      input:
        type: object
      output:
        type: object
      properties:
        type: object
      createdTime:
        type: integer
        format: int64
      updatedTime:
        type: integer
        format: int64
      createdBy:
        type: string
      updatedBy:
        type: string
  ConditionalProcess:
    type: object
    required:
    - field
    - expression
    properties:
      field:
        type: string
      expression:
        type: string
      onTrueWorkItem:
        $ref: "#/definitions/WorkItem"
      onFalseWorkItem:
        $ref: "#/definitions/WorkItem"
      onTrueUpdateSession:
        type: object
      onTrueUpdateInput:
        type: object
      onTrueUpdateOutput:
        type: object
      onFalseUpdateSession:
        type: object
      onFalseUpdateInput:
        type: object
      onFalseUpdateOutput:
        type: object
  WorkFlowProcess:
    type: object
    required:
    - id
    - processId
    properties:
      id:
        type: string
      processId:
        type: string
      chainedProcess:
        $ref: "#/definitions/WorkItem"
      onErrorProcesses:
        type: array
        items:
          $ref: "#/definitions/WorkItem"
      onCompleteProcesses:
        type: array
        items:
          $ref: "#/definitions/WorkItem"
      onNextProcesses:
        type: array
        items:
          $ref: "#/definitions/WorkItem"
      conditionalProcesses:
        type: array
        items:
          $ref: "#/definitions/ConditionalProcess"
      executeSerially:
        type: boolean
      name:
        type: string
  WorkFlowTrigger:
    type: object
    required:
    - trigggerId
    - processId
    properties:
      id:
        type: string
      processId:
        type: string
      properties:
        type: object
      processType:
        type: string
        enum:
          - PROCESS
          - WORKFLOW_PROCESS
      name:
        type: string
  WorkFlowTriggerGroup:
    type: object
    required:
    - id
    - processId
    - triggerIds
    properties:
      id:
        type: string
      processId:
        type: string
      properties:
        type: object
      processType:
        type: string
        enum:
          - PROCESS
          - WORKFLOW_PROCESS
      triggerIds:
        type: array
        items:
          type: string
      name:
        type: string
  WorkFlow:
    type: object
    required:
    - id
    - name
    - processes
    properties:
      id:
        type: string
      name:
        type: string
      group:
        type: string
      domainKey:
        type: string
      description:
        type: string
      tags:
        type: string
      cloneObjects:
        type: boolean
      properties:
        type: object
      access:
        type: string
        enum:
          - DOMAIN
          - ORGANIZATION
          - GLOBAL
          - SYSTEM
      orgId:
        type: integer
        format: int64
      processes:
        type: array
        items:
          $ref: "#/definitions/WorkFlowProcess"
      triggers:
        type: array
        items:
          $ref: "#/definitions/WorkFlowTrigger"
      triggerGroups:
        type: array
        items:
          $ref: "#/definitions/WorkFlowTriggerGroup"
      createdTime:
        type: integer
        format: int64
      updatedTime:
        type: integer
        format: int64
      createdBy:
        type: string
      updatedBy:
        type: string
      beginProceses:
        type: array
        items:
          type: string
      global:
        type: boolean
      terminateOnError:
        type: boolean
      inputSource:
        type: string
        enum:
          - JSON
          - MESSAGE_RULE
          - BINARY_RULE
          - FILE_RULE
      inputMessageId:
        type: integer
        format: int64
      inputBinaryRule:
        type: string
      inputFileRule:
        type: string
      metaFields:
        type: array
        items:
          type: string
  WorkFlowMessage:
    type: object
    properties:
      severity:
        type: integer
      message:
        type: string
      stamp:
        type: integer
        format: int64
  Batch:
    type: object
    properties:
      beginStamp:
        type: integer
        format: int64
      endStamp:
        type: integer
        format: int64
      duration:
        type: integer
        format: int64
      nodeId:
        type: string
      nodeUid:
        type: string
      serviceId:
        type: integer
  WorkFlowStep:
    type: object
    required:
    - id
    properties:
      id:
        type: string
      instanceId:
        type: string
      parentStepId:
        type: string
      workFlowProcessId:
        type: string
      processId:
        type: string
      queuedStamp:
        type: integer
        format: int64
      startedStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
      duration:
        type: integer
        format: int64
      output:
        type: object
      messages:
        type: array
        items:
          $ref: "#/definitions/WorkFlowMessage"
      nextSteps:
        type: array
        items:
          $ref: "#/definitions/WorkFlowStep"
      type:
        type: string
        enum:
          - WORKFLOW_PROCESS
          - PROCESS
          - TRIGGER
          - TRIGGER_GROUP
          - WORKFLOW
          - PAUSE
          - STOP
          - TERMINATE
      batch:
        type: array
        items:
          $ref: "#/definitions/Batch"
      triggerId:
        type: string
      triggerGroupId:
        type: string
      workFlowId:
        type: string
      status:
        type: string
        enum:
          - QUEUED
          - PROCESSING
          - VALIDATING
          - PAUSED
          - CANCELLED
          - ERRORED
          - FINISHED
      args:
        type: object
      processName:
        type: string
      workFlowName:
        type: string
      clonedProcess:
        $ref: '#/definitions/Process'
      onErrorStep:
        type: boolean
  TriggerInfo:
    type: object
    properties:
      triggeredAt:
        type: integer
        format: int64
      triggerdStep:
        type: string
      triggerGroupId:
        type: string
      triggerId:
        type: string
  WorkFlowInstance:
    type: object
    required:
    - id
    properties:
      domainKey:
        type: string
      id:
        type: string
      queuedStamp:
        type: integer
        format: int64
      startedStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
      duration:
        type: integer
        format: int64
      session:
        type: object
      steps:
        type: array
        items:
          $ref: "#/definitions/WorkFlowStep"
      messages:
        type: array
        items:
          $ref: "#/definitions/WorkFlowMessage"
      pausedSteps:
        type: array
        items:
          type: string
      failedSteps:
        type: array
        items:
          type: string
      workFlowId:
        type: string
      batch:
        type: array
        items:
          $ref: "#/definitions/Batch"
      createdBy:
        type: string
      updatedBy:
        type: string
      status:
        type: string
        enum:
          - QUEUED
          - PROCESSING
          - PAUSED
          - CANCELLED
          - ERRORED
          - FINISHED
          - STOPPED
          - TERMINATED
      input:
        type: object
      queuedCount:
        type: integer
      processingCount:
        type: integer
      validatingCount:
        type: integer
      pausedCount:
        type: integer
      cancelledCount:
        type: integer
      erroredCount:
        type: integer
      finishedCount:
        type: integer
      nodeId:
        type: string
      serviceId:
        type: integer
      access:
        type: string
      orgId:
        type: integer
        format: int64
      debug:
        type: boolean
      totalCount:
        type: integer
      activeCount:
        type: integer
      triggered:
        type: array
        items:
          $ref: "#/definitions/TriggerInfo"
      workFlowName:
        type: string
      beginStamp:
        type: integer
        format: int64
      clonedWorkflow:
        $ref: '#/definitions/WorkFlow'
      meta:
        type: object
      invocationSource:
        type: string
        enum:
          - DIRECT
          - WORKFLOW
      invokedWorkFlowInstance:
        type: string
      invokedWorkFlowStep:
        type: string
      invokedWorkFlows:
        type: array
        items:
          type: string
  PushResult:
    type: object
    required:
      - muid
    properties:
      muid:
        type: string
        description: message unique identifier
  MessageHeader:
    type: object
    properties:
      key:
        type: string
        description: domain key
      api:
        type: string
        description: domain api-key
      did:
        type: string
        description: device id
      dmdl:
        type: string
        description: device model
      fwver:
        type: string
        description: device firmware version
      mid:
        type: integer
        format: int64
        description: message identifier
      dmid:
        type: string
        description: domain message identifier
      gmid:
        type: string
        description: global message identifier
      smid:
        type: string
        description: system message identifier
    required:
      - key
      - api
      - did
      - dmdl
      - fwver
  PushMessage:
    type: object
    properties:
      header:
        $ref: '#/definitions/MessageHeader'
      data:
        type: string
        description: message payload JSON object
    required:
      - header
      - data
  PushJSONMessage:
    type: object
    properties:
      header:
        $ref: '#/definitions/MessageHeader'
      data:
        type: object
        description: message payload JSON object
    required:
      - header
      - data
  DeviceMessage:
    type: object
    properties:
      header:
        type: string
        description: message header JSON object
      data:
        type: string
        description: message payload JSON object
      receivedStamp:
        type: integer
        format: int64
      id:
        type: string
        format: uuid
      messageType:
        type: string
      messageId:
        type: string
      nodeId:
        type: string
      nodeUUID:
        type: string
        format: uuid
      deviceModel:
        type: string
      firmwareVersion:
        type: string
      ipAddress:
        type: string
      port:
        type: integer
        format: int32
      channel:
        type: string
        enum:
          - HTTP
          - MQTT
          - UDP
          - TCP
          - COAP
          - FCM
          - LORA
          - FTP
          - TFTP
    required:
      - header
      - data
  Command:
    type: object
    discriminator: commandType
    required:
    - data
    - deviceIds
    properties:
      data:
        type: string
      deviceIds:
        type: array
        items:
          type: string
  BroadcastCommand:
    type: object
    discriminator: commandType
    required:
    - data
    properties:
      data:
        type: string
      filters:
        type: array
        items:
          type: string
  CommandStatus:
    type: object
    required:
      - deviceId
      - corrId
      - status
    properties:
      deviceId:
        type: string
      corrId:
        type: integer
        format: int64
        description: unique command identifier or this device
      status:
        type: string
        enum:
          - QUEUED
          - NOT_FOUND
          - NOT_CONNECTED
          - SENT
          - FAILED
          - ACKED
          - NACKED
          - NOT_ALLOWED
          - CHANNEL_INACTIVE
      createdStamp:
        type: integer
        format: int64
      queuedStamp:
        type: integer
        format: int64
      sentStamp:
        type: integer
        format: int64
      ackedStamp:
        type: integer
        format: int64
      commandType:
        type: string
        enum:
          - JSON_COMMAND
          - RAW_COMMAND
      dataChannel:
        type: string
        enum:
          - UDP
          - MQTT
          - HTTP
          - COAP
          - TCP
          - FCM
          - LORA
          - FTP
          - TFTP
      nodeId:
        type: string
      nodeUid:
        type: string
        format: uuid
      description:
        type: string
      reportedIp:
        type: string
      reportedPort:
        type: integer
        format: int32
  Storable:
    type: object
    discriminator: storableType
    properties:
      dataType:
        type: string
        enum:
          - VARCHAR
          - TEXT
          - BOOLEAN
          - BIGINT
          - BLOB
          - DOUBLE
          - FLOAT
          - INTEGER
          - DATE
          - TIMESTAMP
          - UUID
          - KEYWORD
      format:
        type: string
        description: Required if **dataType** is **blob**
        enum:
          - AS_IS
          - JSON
          - HEX
          - BASE64
      label:
        type: string
      description:
        type: string
  ElasticStorable:
    type: object
    discriminator: elasticStorableType
    properties:
      dataType:
        type: string
        enum:
          - VARCHAR
          - TEXT
          - BOOLEAN
          - BIGINT
          - BLOB
          - DOUBLE
          - FLOAT
          - INTEGER
          - DATE
          - TIMESTAMP
          - UUID
          - KEYWORD
          - GEO_SHAPE
          - GEO_POINT
      format:
        type: string
        description: Required if **dataType** is **blob**
        enum:
          - AS_IS
          - JSON
          - HEX
          - BASE64
      label:
        type: string
      description:
        type: string
  Property:
    allOf:
    - $ref: '#/definitions/Storable'
    - type: object
      discriminator: propertyType
      required:
      - 'name'
      - 'value'
      properties:
        name:
          type: string
        value:
          type: string
  DeviceProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'deviceId'
      properties:
        deviceId:
          type: string
  DeviceModelProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'deviceModelId'
      properties:
        deviceModelId:
          type: string
  DeviceGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'deviceId'
      - 'deviceGroupId'
      properties:
        deviceId:
          type: string
        deviceGroupId:
          type: integer
          format: int64
  AssetProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'assetId'
      properties:
        assetId:
          type: string
  AssetGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'assetId'
      - 'assetGroupId'
      properties:
        assetId:
          type: string
        assetGroupId:
          type: integer
          format: int64
  UserProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'userId'
      properties:
        userId:
          type: string
  UserGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'userId'
      - 'userGroupId'
      properties:
        userId:
          type: string
        userGroupId:
          type: integer
          format: int64
  UserAssetGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'userId'
      - 'assetId'
      - 'groupId'
      properties:
        userId:
          type: string
        assetId:
          type: string
        groupId:
          type: integer
          format: int64
  UserDeviceGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'userId'
      - 'deviceId'
      - 'groupId'
      properties:
        userId:
          type: string
        deviceId:
          type: string
        groupId:
          type: integer
          format: int64
  GeofenceProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'geofenceId'
      - 'group'
      properties:
        geofenceId:
          type: string
        group:
          type: string
  DomainProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
  SystemProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
  DomainDeviceGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'groupId'
      properties:
        groupId:
          type: integer
          format: int64
  DomainUserGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'groupId'
      properties:
        groupId:
          type: integer
          format: int64
  DomainAssetGroupProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'groupId'
      properties:
        groupId:
          type: integer
          format: int64
  MessageField:
    allOf:
    - $ref: '#/definitions/ElasticStorable'
    - type: object
      required:
       - 'name'
      properties:
        name:
          type: string
        shape:
          type: object
  MessageSpecification:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      label:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/MessageField'
    required:
      - id
      - name
      - fields
  MessageSpecificationV2:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
      name:
        type: string
      label:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/MessageField'
    required:
      - id
      - name
      - fields
  CommandField:
    allOf:
    - $ref: '#/definitions/Storable'
    - type: object
      required:
       - 'commandId'
       - 'name'
      properties:
        commandId:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
  CommandDefinition:
    type: object
    properties:
      id:
        type: integer
        format: int32
      name:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/CommandField'
    required:
      - id
      - name
      - fields
  RecordField:
    allOf:
    - $ref: '#/definitions/ElasticStorable'
    - type: object
      required:
       - 'name'
      properties:
        name:
          type: string
        shape:
          type: object
  RecordDefinition:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      label:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/RecordField'
    required:
      - id
      - name
      - fields
  RecordDefinitionV2:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
      name:
        type: string
      description:
        type: string
      label:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/RecordField'
    required:
      - id
      - name
      - fields
  Param: 
    type: 'object'
    required: 
      - 'name'
    properties: 
      name: 
        type: 'string'
      value: 
        type: 'string'
  ScrollQuery: 
    type: 'object'
    required: 
      - 'scroll'
      - 'id'
    properties: 
      scroll: 
        type: 'string'
      id: 
        type: 'string'
  SearchQuery:
    type: object
    discriminator: searchQueryType
    required:
      - 'type'
      - 'query'
    properties:
      extraPath:
        type: string
      type:
        type: string
        enum:
          - 'ACCESS'
          - 'ALEXA'
          - 'ASSET'
          - 'ASSET_GROUP'
          - 'AUDIT'
          - 'COMMAND'
          - 'CONNECTION_POOL'
          - 'DB_METADATA'
          - 'DB_TEMPLATE'
          - 'DEVICE'
          - 'DEVICE_GROUP'
          - 'DEVICE_MODEL'
          - 'DOMAIN'
          - 'DOMAIN_ASSET_GROUP'
          - 'DOMAIN_DEVICE_GROUP'
          - 'DOMAIN_USER_GROUP'
          - 'DOMAIN_USER_GROUP_MEMBER'
          - 'EMAIL'
          - 'EVENT'
          - 'EVENT_REGISTRATION'
          - 'FCM'
          - 'FCM_DEVICE'
          - 'FILE'
          - 'FILE_PUBLIC'
          - 'FIRMWARE'
          - 'GEOFENCE'
          - 'GROOVY'
          - 'GROOVY_JAR'
          - 'LOCATION'
          - 'LOCATION_HISTORY'
          - 'LOG'
          - 'MESSAGE'
          - 'NOTIFICATION'
          - 'OBJECT'
          - 'PLUGIN'
          - 'PUBLIC_GROOVY'
          - 'PUBLIC_GROOVY_JAR'
          - 'PUBLIC_NOTIFICATION'
          - 'RECORD'
          - 'REPORTED_DEVICE'
          - 'RULE_FAILURE'
          - 'SCREEN'
          - 'SCREEN_IMPORTED'
          - 'SCREEN_VERSION'
          - 'SMS'
          - 'SQL_TABLE'
          - 'SQL_TEMPLATE'
          - 'USER'
          - 'USER_ASSET_GROUP'
          - 'USER_DEVICE_GROUP'
          - 'USER_GROUP'
          - 'VERTICAL'
          - 'VERTICAL_IMPORTED'
          - 'VERTICAL_PUBLISHED'
          - 'VERTICAL_VERSION'
          - 'VOICE'
          - 'WIDGET'
          - 'WIDGET_IMPORTED'
          - 'WIDGET_PUBLISHED'
          - 'WIDGET_VERSION'
          - 'ROLE'
          - 'USER_ROLE'
          - 'ORGANIZATION_ROLE'
          - 'ORGANIZATION_USER_ROLE'
          - 'ORGANIZATION'
          - 'ORGANIZATION_DEVICE'
          - 'ORGANIZATION_ASSET'
          - 'ORGANIZATION_USER'
          - 'ORGANIZATION_USER_DEVICE'
          - 'ORGANIZATION_USER_ASSET'
          - 'BILLING'
          - 'CONTACT'
          - 'INVOICE'
          - 'BILLING_TEMPLATE'
          - 'SENT_COMMAND'
          - 'ASSET_GROUP_MEMBER'
          - 'DEVICE_GROUP_MEMBER'
          - 'DOMAIN_ASSET_GROUP_MEMBER'
          - 'DOMAIN_DEVICE_GROUP_MEMBER'
          - 'USER_ASSET_GROUP_MEMBER'
          - 'USER_DEVICE_GROUP_MEMBER'
          - 'USER_GROUP_MEMBER'
          - 'PROCESS'
          - 'WORKFLOW'
          - 'WORKFLOW_INSTANCE'
          - 'GLOBAL_PROCESS'
          - 'GLOBAL_WORKFLOW'
          - 'GLOBAL_WORKFLOW_INSTANCE'
          - 'TRIGGER'
          - 'TRIGGER_GROUP'
          - 'GLOBAL_TRIGGER'
          - 'GLOBAL_TRIGGER_GROUP'
      query:
        type: string
        description: ElasticSearch Query String
      specId:
        type: integer
        format: int64
        description: 'Required if **type** is one of **[ message | record ]**'
      params:
        type: array
        items:
          $ref: '#/definitions/Param'
  TemplateQuery:
    type: object
    discriminator: templateQueryType
    required:
      - 'type'
      - 'templateName'
    properties:
      systemTemplate:
        type: boolean
      type:
        type: string
        enum:
          - 'ACCESS'
          - 'ALEXA'
          - 'ASSET'
          - 'ASSET_GROUP'
          - 'AUDIT'
          - 'COMMAND'
          - 'CONNECTION_POOL'
          - 'DB_METADATA'
          - 'DB_TEMPLATE'
          - 'DEVICE'
          - 'DEVICE_GROUP'
          - 'DEVICE_MODEL'
          - 'DOMAIN'
          - 'DOMAIN_ASSET_GROUP'
          - 'DOMAIN_DEVICE_GROUP'
          - 'DOMAIN_USER_GROUP'
          - 'DOMAIN_USER_GROUP_MEMBER'
          - 'EMAIL'
          - 'EVENT'
          - 'EVENT_REGISTRATION'
          - 'FCM'
          - 'FCM_DEVICE'
          - 'FILE'
          - 'FILE_PUBLIC'
          - 'FIRMWARE'
          - 'GEOFENCE'
          - 'GROOVY'
          - 'GROOVY_JAR'
          - 'LOCATION'
          - 'LOCATION_HISTORY'
          - 'LOG'
          - 'MESSAGE'
          - 'NOTIFICATION'
          - 'OBJECT'
          - 'PLUGIN'
          - 'PUBLIC_GROOVY'
          - 'PUBLIC_GROOVY_JAR'
          - 'PUBLIC_NOTIFICATION'
          - 'RECORD'
          - 'REPORTED_DEVICE'
          - 'RULE_FAILURE'
          - 'SCREEN'
          - 'SCREEN_IMPORTED'
          - 'SCREEN_VERSION'
          - 'SMS'
          - 'SQL_TABLE'
          - 'SQL_TEMPLATE'
          - 'USER'
          - 'USER_ASSET_GROUP'
          - 'USER_DEVICE_GROUP'
          - 'USER_GROUP'
          - 'VERTICAL'
          - 'VERTICAL_IMPORTED'
          - 'VERTICAL_PUBLISHED'
          - 'VERTICAL_VERSION'
          - 'VOICE'
          - 'WIDGET'
          - 'WIDGET_IMPORTED'
          - 'WIDGET_PUBLISHED'
          - 'WIDGET_VERSION'
          - 'ROLE'
          - 'USER_ROLE'
          - 'ORGANIZATION_ROLE'
          - 'ORGANIZATION_USER_ROLE'
          - 'ORGANIZATION'
          - 'ORGANIZATION_DEVICE'
          - 'ORGANIZATION_ASSET'
          - 'ORGANIZATION_USER'
          - 'ORGANIZATION_USER_DEVICE'
          - 'ORGANIZATION_USER_ASSET'
          - 'BILLING'
          - 'CONTACT'
          - 'INVOICE'
          - 'BILLING_TEMPLATE'
          - 'SENT_COMMAND'
          - 'ASSET_GROUP_MEMBER'
          - 'DEVICE_GROUP_MEMBER'
          - 'DOMAIN_ASSET_GROUP_MEMBER'
          - 'DOMAIN_DEVICE_GROUP_MEMBER'
          - 'USER_ASSET_GROUP_MEMBER'
          - 'USER_DEVICE_GROUP_MEMBER'
          - 'USER_GROUP_MEMBER'
          - 'PROCESS'
          - 'WORKFLOW'
          - 'WORKFLOW_INSTANCE'
          - 'GLOBAL_PROCESS'
          - 'GLOBAL_WORKFLOW'
          - 'GLOBAL_WORKFLOW_INSTANCE'
          - 'TRIGGER'
          - 'TRIGGER_GROUP'
          - 'GLOBAL_TRIGGER'
          - 'GLOBAL_TRIGGER_GROUP'
      templateName:
        type: string
      mergeContent:
        type: string
        description: Merging JSON string
      extraPath:
        type: string
      params:
        type: array
        items:
          $ref: '#/definitions/Param'
      specId:
        type: integer
        format: int64
        description: 'Required if **type** is one of **[ message | record ]**'
  SearchResult:
    type: object
    required:
      - httpCode
    properties:
      httpCode:
        type: integer
        format: int32
      result:
        type: string
  Event:
    type: object
    required:
      - id
      - name
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      subject:
        type: string
      content:
        type: string
  EventRegistration:
    type: object
    required:
      - id
      - channel
      - address
    properties:
      id:
        type: integer
        format: int64
      channel:
        type: string
        enum:
          - 'EMAIL'
          - 'SMS'
          - 'VOICE'
          - 'FCM'
      address:
        type: string
      domainKey:
        type: string
  ScriptResult:
    type: object
    required:
      - session
    properties:
      session:
        type: string
        format: uuid
  Geofence:
    type: object
    discriminator: categorizedEntityType
    required:
      - name
    properties:
      domainKey:
        type: string
      group:
        type: string
      name:
        type: string
      geoType:
        type: string
      label:
        type: string
      description:
        type: string
      coordinates:
        type: string
      radius:
        type: string
      geometries:
        type: string
      createdAt:
        type: integer
        format: int64
      category1:
        type: string
      category2:
        type: string
      category3:
        type: string
      category4:
        type: string
      category5:
        type: string
      category6:
        type: string
      category7:
        type: string
      category8:
        type: string
      category9:
        type: string
      category10:
        type: string
  Location:
    type: object
    discriminator: locationType
    required:
      - lat
      - lon
      - entityType
    properties:
      domainKey:
        type: string
      lat:
        type: number
        format: double
      lon:
        type: number
        format: double
      entityType:
        type: string
        enum:
          - ENTITY
          - DEVICE
          - ASSET
      entityId:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
  Count:
    type: object
    required:
      - total
    properties:
      total:
        type: integer
        format: int64
  OTABatch:
    type: object
    discriminator: otaBatchType
    required:
      - id
      - state
      - toModel
      - toVersion
      - createdAt
      - expireAt
    properties:
      id:
        type: string
        format: uuid
      state:
        type: string
        enum:
          - CREATING
          - CREATED
          - RUNNING
          - CANCELLED
          - FAILED
          - PARTIAL_COMPLETE
          - COMPLETE        
      name:
        type: string
      message:
        type: string
      toModel:
        type: string
      toVersion:
        type: string
      createdAt:
        type: integer
        format: int64
      expireAt:
        type: integer
        format: int64
      finishedAt:
        type: integer
        format: int64
  OTAModelBatch:
    allOf:
    - $ref: '#/definitions/OTABatch'
    - type: object
    required:
      - fromModel
      - fromVersion
    properties:
      fromModel:
        type: string
      fromVersion:
        type: string
  OTADeviceBatch:
    allOf:
    - $ref: '#/definitions/OTABatch'
    - type: object
  OTABatchMember:
    type: object
    discriminator: otaBatchMemberType
    required:
      - id
      - deviceId
      - state
    properties:
      id:
        type: string
        format: uuid
      deviceId:
        type: string
      state:
        type: string
        enum:
          - PENDING
          - DOWNLOADING
          - FAILED
          - SUCCESS
      beginStamp:
        type: integer
        format: int64
      endStamp:
        type: integer
        format: int64
      failures:
        type: integer
        format: int32
  OTAModelBatchMember:
    allOf:
    - $ref: '#/definitions/OTABatchMember'
    - type: object
  OTADeviceBatchMember:
    allOf:
    - $ref: '#/definitions/OTABatchMember'
    - type: object
  FirmwareInfo:
    type: object
    required:
      - model
      - version
    properties:
      model:
        type: string
      version:
        type: string
  Script:
    type: object
    required:
      - sessionId
      - code
    properties:
      sessionId:
        type: string
        format: uuid
      code:
        type: string
  PropertyCommand:
    type: object
    required:
      - 'target'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
          - ORGANIZATION
          - ORGANIZATION_DEVICE
          - ORGANIZATION_ASSET
          - ORGANIZATION_USER
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int64
  Lookup:
    type: object
    required:
      - 'target'
      - 'dataType'
      - 'name'
      - 'value'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
          - USER_ASSET_GROUP
          - USER_DEVICE_GROUP
          - SYSTEM
          - ORGANIZATION
          - ORGANIZATION_DEVICE
          - ORGANIZATION_ASSET
          - ORGANIZATION_USER
      dataType:
        type: string
        enum:
          - BOOLEAN
          - BYTE
          - CHAR
          - SHORT
          - INT
          - LONG
          - FLOAT
          - DOUBLE
          - STRING
          - UUID
          - BLOB
      name:
        type: string
      value:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int64
      geofenceGroup:
        type: string
      orgId:
        type: integer
        format: int64
  LookupGet:
    type: object
    required:
      - 'target'
      - 'name'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
          - USER_ASSET_GROUP
          - USER_DEVICE_GROUP
          - SYSTEM
          - ORGANIZATION
          - ORGANIZATION_DEVICE
          - ORGANIZATION_ASSET
          - ORGANIZATION_USER
      name:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int64
  LookupResult:
    type: object
    required:
      - 'dataType'
      - 'name'
      - 'value'
    properties:
      dataType:
        type: string
        enum:
          - BOOLEAN
          - BYTE
          - CHAR
          - SHORT
          - INT
          - LONG
          - FLOAT
          - DOUBLE
          - STRING
          - UUID
          - BLOB
      name:
        type: string
      value:
        type: string
  LookupDelete:
    type: object
    required:
      - 'target'
      - 'name'
    properties:
      target:
        type: string
        enum:
          - ASSET
          - ASSET_GROUP
          - DEVICE
          - DEVICE_GROUP
          - DEVICE_MODEL
          - DOMAIN
          - DOMAIN_ASSET_GROUP
          - DOMAIN_DEVICE_GROUP
          - DOMAIN_USER_GROUP
          - GEOFENCE
          - USER
          - USER_GROUP
          - USER_ASSET_GROUP
          - USER_DEVICE_GROUP
          - SYSTEM
          - ORGANIZATION
          - ORGANIZATION_DEVICE
          - ORGANIZATION_ASSET
          - ORGANIZATION_USER
      name:
        type: string
      assetId:
        type: string
      deviceId:
        type: string
      deviceModelId:
        type: string
      userId:
        type: string
      geofenceId:
        type: string
      groupId:
        type: integer
        format: int64
  NodeProperty:
    type: object
    required:
      - 'name'
      - 'value'
    properties:
      name:
        type: string
      value:
        type: string
  ClusterNode:
    type: object
    properties:
      nodeId:
        type: string
      nodeUid:
        type: string
      consistentId:
        type: string
      addresses:
        type: array
        items:
          type: string
      hostNames:
        type: array
        items:
          type: string
      props:
        type: array
        items:
          $ref: '#/definitions/NodeProperty'
  ClusterNodes:
    type: object
    properties:
      servers:
        type: array
        items:
          $ref: '#/definitions/ClusterNode'
      workers:
        type: array
        items:
          $ref: '#/definitions/ClusterNode'
      version:
        type: string
      apiVersion:
        type: string
  EmailGateway:
    type: object
    required:
      - 'host'
      - 'port'
      - 'user'
      - 'password'
      - 'primaryEmail'
    properties:
      host:
        type: string
      port:
        type: integer
        format: int32
      user:
        type: string
      password:
        type: string
      primaryEmail:
        type: string
      bounceEmail:
        type: string
      ssl:
        type: boolean
      tls:
        type: boolean
      debug:
        type: boolean
  TwilioGateway:
    type: object
    required:
      - 'sid'
      - 'token'
      - 'primaryPhone'
    properties:
      sid:
        type: string
      token:
        type: string
      primaryPhone:
        type: string
      debug:
        type: boolean
  FCMGateway:
    type: object
    required:
      - 'apiKey'
    properties:
      apiKey:
        type: string
      debug:
        type: boolean
  UDPGateway:
    type: object
    required:
      - 'port'
      - 'threads'
    properties:
      port:
        type: integer
        format: int32
      threads:
        type: integer
        format: int32
      decoderCode:
        type: string
  GoogleMaps:
    type: object
    required:
      - 'apiKey'
    properties:
      apiKey:
        type: string
  Counter:
    type: object
    discriminator: counterType
    required:
    - users
    - devices
    - udpMessages
    - mqttMessages
    - httpMessages
    - fcmMessages
    - coapMessages
    - tcpMessages
    - loraMessages
    - commands
    - domains
    properties:
      users:
        type: integer
        format: int64
      devices:
        type: integer
        format: int64
      udpMessages:
        type: integer
        format: int64
      mqttMessages:
        type: integer
        format: int64
      httpMessages:
        type: integer
        format: int64
      fcmMessages:
        type: integer
        format: int64
      coapMessages:
        type: integer
        format: int64
      tcpMessages:
        type: integer
        format: int64
      loraMessages:
        type: integer
        format: int64
      commands:
        type: integer
        format: int64
      domains:
        type: integer
        format: int64
      records:
        type: integer
        format: int64
      pendingMessages:
        type: integer
      pendingLogs:
        type: integer
      pendingEmails:
        type: integer
      pendingSms:
        type: integer
      pendingFcm:
        type: integer
      pendingVoice:
        type: integer
      version:
        type: string
      apiVersion:
        type: string
  DomainCounter:
    allOf:
    - $ref: '#/definitions/Counter'
    - type: object
      required:
       - 'domainKey'
      properties:
        domainKey:
          type: string
  BoodskapLicense:
    type: object
    properties:
      domainKey:
        type: string
      features:
        type: array
        items:
          type: string
  GDResult:
    type: object
    required:
    - id
    properties:
      id:
        type: string
        format: uuid
  GlobalData:
    type: object
    required:
    - data
    properties:
      data:
        type: string
  InsertResult:
    type: object
    required:
      - rkey
    properties:
      rkey:
        type: string
        description: record unique identifier
  GroovyScript:
    type: object
    required:
      - sessionId
      - code
    properties:
      sessionId:
        type: string
        format: uuid
      code:
        type: string
  GroovyScriptV2:
    type: object
    required:
      - sessionId
      - code
    properties:
      sessionId:
        type: string
        format: uuid
      code:
        type: string
  TemplateScript:
    type: object
    required:
      - sessionId
      - template
    properties:
      sessionId:
        type: string
        format: uuid
      template:
        type: string
      templateArgs:
        type: string
      scriptArgs:
        type: string
  TemplateScriptV2:
    type: object
    required:
      - sessionId
      - template
    properties:
      sessionId:
        type: string
        format: uuid
      template:
        type: string
      templateArgs:
        type: object
      scriptArgs:
        type: object
  RuleScript:
    type: object
    required:
      - sessionId
      - namedrule
    properties:
      sessionId:
        type: string
        format: uuid
      namedrule:
        type: string
      scriptArgs:
        type: string
  RuleScriptV2:
    type: object
    required:
      - sessionId
      - namedrule
    properties:
      sessionId:
        type: string
        format: uuid
      namedrule:
        type: string
      scriptArgs:
        type: object
  CallOutput:
    type: object
    required:
      - jsonResult
    properties:
      jsonResult:
        type: string
  IDResult:
    type: object
    required:
      - id
    properties:
      id:
        type: string
        format: uuid
  FileContent:
    type: object
    required:
      - content
      - format
    properties:
      content:
        type: string
      format:
        type: string
        enum:
          - BASE64
          - HEX
          - AS_IS
      ispublic:
        type: boolean
      id:
        type: string
        format: uuid
      fileName:
        type: string
      mediaType:
        type: string
      tags:
        type: string
  TextContent:
    type: object
    required:
      - content
    properties:
      content:
        type: string
  MD5Hash:
    type: object
    required:
      - hash
    properties:
      hash:
        type: string
  Audit:
    type: object
    required:
      - entity
      - severity
      - message
    properties:
      domainKey:
        type: string
      id:
        type: string
        format: uuid
      created:
        type: integer
        format: int64
      author:
        type: string
      session:
        type: string
      entity:
        type: string
      severity:
        type: integer
        format: int32
      message:
        type: string
      data:
        type: string
  Notification:
    type: object
    required:
      - entity
      - severity
      - message
    properties:
      domainKey:
        type: string
      id:
        type: string
        format: uuid
      created:
        type: integer
        format: int64
      author:
        type: string
      session:
        type: string
      entity:
        type: string
      severity:
        type: integer
        format: int32
      message:
        type: string
      data:
        type: string
  Widget:
    type: object
    properties:
      domainKey:
        type: string
      clientDomainKey:
        type: string
      category:
        type: string
      tags:
        type: string
      widgetid:
        type: string
      widgetname:
        type: string
      widgetimage:
        type: string
      widgetscreens:
        type: array
        items:
          type: string
      version:
        type: string
      enabled:
        type: boolean
      published:
        type: boolean
      code:
        type: string
      createdby:
        type: string
      createdbyemail:
        type: string
      createdtime:
        type: integer
        format: int64
      updatedtime:
        type: integer
        format: int64
      importedtime:
        type: integer
        format: int64
      config:
        type: string
      description:
        type: string
      marketplace:
        type: string
  Screen:
    type: object
    properties:
      domainKey:
        type: string
      clientDomainKey:
        type: string
      category:
        type: string
      tags:
        type: string
      screenid:
        type: string
      screenname:
        type: string
      screenimage:
        type: string
      screenitems:
        type: array
        items:
          type: string
      version:
        type: string
      code:
        type: string
      createdby:
        type: string
      createdbyemail:
        type: string
      createdtime:
        type: integer
        format: int64
      updatedtime:
        type: integer
        format: int64
      importedtime:
        type: integer
        format: int64
      config:
        type: string
      description:
        type: string
      market:
        type: string
  Dashboard:
    type: object
    properties:
      id:
        type: string
      property:
        type: string
      name:
        type: string
      icon:
        type: string
      bgcolor:
        type: string
      imgpath:
        type: string
      isimage:
        type: boolean
      titlebgcolor:
        type: string
      titletxtcolor:
        type: string
  Vertical:
    type: object
    properties:
      domainKey:
        type: string
      clientDomainKey:
        type: string
      category:
        type: string
      tags:
        type: string
      verticalid:
        type: string
      verticalname:
        type: string
      verticalimage:
        type: string
      pricing:
        type: boolean
      price:
        type: number
        format: double
      version:
        type: string
      enabled:
        type: boolean
      published:
        type: boolean
      description:
        type: string
      createdby:
        type: string
      createdbyemail:
        type: string
      createdtime:
        type: integer
        format: int64
      updatedtime:
        type: integer
        format: int64
      importedtime:
        type: integer
        format: int64
      imgpath:
        type: string
      isimage:
        type: boolean
      titlebgcolor:
        type: string
      titletxtcolor:
        type: string
      messages:
        type: array
        items:
          type: integer
          format: int64
      records:
        type: array
        items:
          type: integer
          format: int64
      messagerules:
        type: array
        items:
          type: integer
          format: int64
      scheduledrules:
        type: array
        items:
          type: integer
          format: int64
      namedrules:
        type: array
        items:
          type: string
      templates:
        type: array
        items:
          type: string
      dashboards:
        type: array
        items:
          $ref: "#/definitions/Dashboard"
      mobiledashboards:
        type: array
        items:
          $ref: "#/definitions/Dashboard"
      widgets:
        type: array
        items:
          type: string
      screens:
        type: array
        items:
          type: string
  ExternalAuthToken:
    type: object
    required:
      - domainKey
      - apiKey
      - userId
      - token
    properties:
      domainKey:
        type: string
      apiKey:
        type: string
      userId:
        type: string
      token:
        type: string
      expireAt:
        type: integer
        format: int64
  Alexa:
    type: object
    properties:
      id:
        type: string
        format: uuid
      domainKey:
        type: string
      ruleType:
        type: string
      ruleName:
        type: string
      intentName:
        type: string
      errorResponse:
        type: string
      createdBy:
        type: string
      createdStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
  Access:
    type: object
    required:
      - state
    properties:
      state:
        type: boolean
  SQLField:
    type: object
    required:
      - name
      - type
    properties:
      name:
        type: string
      type:
        type: string
        enum:
          - BOOLEAN
          - INT
          - TINYINT
          - SMALLINT
          - BIGINT
          - DECIMAL
          - DOUBLE
          - REAL
          - TIME
          - DATE
          - TIMESTAMP
          - VARCHAR
          - CHAR
          - UUID
          - BINARY
          - GEOMETRY
  SQLTable:
    type: object
    required:
      - name
      - fields
      - primaryKeyFields
    properties:
      domainKey:
        type: string
      name:
        type: string
      fields:
        type: array
        items:
          $ref: "#/definitions/SQLField"
      primaryKeyFields:
        type: array
        items:
          type: string
      indexFields:
        type: array
        items:
          type: string
      affinityField:
        type: string
      backups:
        type: integer
        format: int32
      template:
        type: string
        enum:
          - PARTITIONED
          - REPLICATED
      automicity:
        type: string
        enum:
          - ATOMIC
          - TRANSACTIONAL
      writeSync:
        type: string
        enum:
          - PRIMARY_SYNC
          - FULL_SYNC
          - FULL_ASYNC
  SQLTemplate:
    type: object
    required:
      - id
      - type
      - query
    properties:
      domainKey:
        type: string
      id:
        type: string
      type:
        type: string
        enum:
          - SELECT
          - INSERT
          - UPDATE
          - MERGE
          - DELETE
      query:
        type: string
  SQLQuery:
    type: object
    required:
      - query
    properties:
      type:
        type: string
        enum:
          - SELECT
          - INSERT
          - UPDATE
          - MERGE
          - DELETE
      query:
        type: string
  SQLTemplateQuery:
    type: object
    required:
      - id
    properties:
      id:
        type: string
      arguments:
        type: string
  SQLMultiTemplateQuery:
    type: object
    required:
      - queries
    properties:
      queries:
        type: array
        items:
          $ref: "#/definitions/SQLTemplateQuery"
  SQLMultiQuery:
    type: object
    required:
      - queries
    properties:
      queries:
        type: array
        items:
          $ref: "#/definitions/SQLQuery"
  SQLRecord:
    type: object
    required:
      - table
      - record
    properties:
      table:
        type: string
      merge:
        type: boolean
      record:
        type: string
  SQLMultiRecord:
    type: object
    required:
      - table
      - records
    properties:
      table:
        type: string
      merge:
        type: boolean
      records:
        type: array
        items:
          type: string
  SQLMultiTableRecords:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/SQLMultiRecord"
  DBRecord:
    type: object
    required:
      - pool
      - table
      - record
    properties:
      pool:
        type: string
      table:
        type: string
      record:
        type: string
  DBUpdateRecord:
    type: object
    required:
      - pool
      - table
      - record
      - whereFields
    properties:
      pool:
        type: string
      table:
        type: string
      record:
        type: string
      whereFields:
        type: array
        items:
          type: string
  DBMultiRecord:
    type: object
    required:
      - pool
      - table
      - records
    properties:
      pool:
        type: string
      table:
        type: string
      records:
        type: array
        items:
          type: string
  DBMultiTableRecords:
    type: object
    required:
      - data
    properties:
      data:
        type: array
        items:
          $ref: "#/definitions/DBMultiRecord"
  CSVArgs:
    type: object
    properties:
      allowMissingColumnNames:
        type: boolean
      commentMarker:
        type: string
      delimiter:
        type: string
      escape:
        type: string
      firstRecordAsHeader:
        type: boolean
      ignoreEmptyLines:
        type: boolean
      ignoreHeaderCase:
        type: boolean
      ignoreSurroundingSpaces:
        type: boolean
      nullString:
        type: string
      quoteChar:
        type: string
      quoteMode:
        type: string
        enum:
          - NONE
          - ALL
          - ALL_NONE_NULL
          - MINIMAL
          - NON_NUMERIC
      recordSeparator:
        type: string
      skipHeaderRecord:
        type: boolean
      trailingDelimiter:
        type: boolean
      header:
        type: array
        items:
          type: string
  TomcatJDBCArgs:
    type: object
    required:
      - url
      - username
      - password
      - driverClassName
    properties:
      url:
        type: string 
      username:
        type: string
      password:
        type: string
      driverClassName:
        type: string
      abandonWhenPercentageFull:
        type: integer
      accessToUnderlyingConnectionAllowed:
        type: boolean
      alternateUsernameAllowed:
        type: boolean
      commitOnReturn:
        type: boolean
      defaultAutoCommit:
        type: boolean
      defaultCatalog:
        type: string
      defaultReadOnly:
        type: boolean
      defaultTransactionIsolation:
        type: integer
      fairQueue:
        type: boolean
      ignoreExceptionOnPreLoad:
        type: boolean
      initialSize:
        type: integer
      initSQL:
        type: string
      logAbandoned:
        type: boolean
      logValidationErrors:
        type: boolean
      maxActive:
        type: integer
      maxAge:
        type: integer
        format: int64
      maxIdle:
        type: integer
      maxWait:
        type: integer
      minEvictableIdleTimeMillis:
        type: integer
      minIdle:
        type: integer
      numTestsPerEvictionRun:
        type: integer
      propagateInterruptState:
        type: boolean 
      removeAbandoned:
        type: boolean
      removeAbandonedTimeout:
        type: integer
      rollbackOnReturn:
        type: boolean
      suspectTimeout:
        type: integer
      testOnBorrow:
        type: boolean
      testOnConnect:
        type: boolean
      testOnReturn:
        type: boolean
      testWhileIdle:
        type: boolean
      timeBetweenEvictionRunsMillis:
        type: integer
      useDisposableConnectionFacade:
        type: boolean
      useEquals:
        type: boolean
      useLock:
        type: boolean
      useStatementFacade:
        type: boolean
      validationInterval:
        type: integer
        format: int64
      validationQuery:
        type: string
      validationQueryTimeout:
        type: integer
  DBCPArgs:
    type: object
    required:
      - url
      - username
      - password
      - driverClassName
    properties:
      url:
        type: string 
      username:
        type: string
      password:
        type: string
      driverClassName:
        type: string
      abandonedUsageTracking:
        type: boolean
      accessToUnderlyingConnectionAllowed:
        type: boolean
      cacheState:
        type: boolean
      defaultAutoCommit:
        type: boolean
      defaultCatalog:
        type: string
      defaultQueryTimeout:
        type: integer
      defaultReadOnly:
        type: boolean
      defaultSchema:
        type: string
      defaultTransactionIsolation:
        type: integer
      enableAutoCommitOnReturn:
        type: boolean
      fastFailValidation:
        type: boolean 
      initialSize:
        type: integer
      lifo:
        type: boolean
      logAbandoned:
        type: boolean
      logExpiredConnections:
        type: boolean
      loginTimeout:
        type: integer
      maxConnLifetimeMillis:
        type: integer
        format: int64
      maxIdle:
        type: integer
      maxOpenPreparedStatements:
        type: integer
      maxTotal:
        type: integer
      maxWaitMillis:
        type: integer
        format: int64
      minEvictableIdleTimeMillis:
        type: integer
        format: int64
      minIdle:
        type: integer
      numTestsPerEvictionRun:
        type: integer
      poolPreparedStatements:
        type: boolean
      removeAbandonedOnBorrow:
        type: boolean
      removeAbandonedOnMaintenance:
        type: boolean
      rollbackOnReturn:
        type: boolean
      softMinEvictableIdleTimeMillis:
        type: integer
        format: int64
      testOnBorrow:
        type: boolean
      testOnCreate:
        type: boolean
      testOnReturn:
        type: boolean
      testWhileIdle:
        type: boolean
      timeBetweenEvictionRunsMillis:
        type: integer
        format: int64
      validationQuery:
        type: string
      validationQueryTimeout:
        type: integer
  C3P0Args:
    type: object
    required:
      - jdbcUrl
      - user
      - password
      - driverClass
    properties:
      jdbcUrl:
        type: string 
      user:
        type: string
      password:
        type: string
      driverClass:
        type: string
      acquireIncrement:
        type: integer
      acquireRetryAttempts:
        type: integer
      acquireRetryDelay:
        type: integer
      autoCommitOnClose:
        type: boolean
      automaticTestTable:
        type: string
      breakAfterAcquireFailure:
        type: boolean
      checkoutTimeout:
        type: integer
      debugUnreturnedConnectionStackTraces:
        type: boolean
      forceIgnoreUnresolvedTransactions:
        type: boolean
      forceSynchronousCheckins:
        type: boolean
      forceUseNamedDriverClass:
        type: boolean
      identityToken:
        type: string
      idleConnectionTestPeriod:
        type: integer
      initialPoolSize:
        type: integer
      loginTimeout:
        type: integer
      maxAdministrativeTaskTime:
        type: integer
      maxConnectionAge:
        type: integer
      maxIdleTime:
        type: integer
      maxIdleTimeExcessConnections:
        type: integer
      maxPoolSize:
        type: integer
      maxStatements:
        type: integer
      maxStatementsPerConnection:
        type: integer
      minPoolSize:
        type: integer
      numHelperThreads:
        type: integer
      overrideDefaultPassword:
        type: string
      overrideDefaultUser:
        type: string
      preferredTestQuery:
        type: string
      privilegeSpawnedThreads:
        type: boolean
      propertyCycle:
        type: integer
      statementCacheNumDeferredCloseThreads:
        type: integer
      testConnectionOnCheckin:
        type: boolean
      testConnectionOnCheckout:
        type: boolean
      unreturnedConnectionTimeout:
        type: integer
      userOverridesAsString:
        type: string
      usesTraditionalReflectiveProxies:
        type: boolean
  HikariArgs:
    type: object
    required:
      - jdbcUrl
      - username
      - password
    properties:
      jdbcUrl:
        type: string 
      username:
        type: string
      password:
        type: string
      dataSourceClassName:
        type: string
      driverClassName:
        type: string
      allowPoolSuspension:
        type: boolean
      autoCommit:
        type: boolean
      catalog:
        type: string
      connectionInitSql:
        type: string
      connectionTestQuery:
        type: string
      connectionTimeout:
        type: integer
        format: int64
      idleTimeout:
        type: integer
        format: int64
      initializationFailTimeout:
        type: integer
        format: int64
      isolateInternalQueries:
        type: boolean
      leakDetectionThreshold:
        type: integer
        format: int64
      maximumPoolSize:
        type: integer
      maxLifetime:
        type: integer
        format: int64
      minimumIdle:
        type: integer
      readOnly:
        type: boolean
      schema:
        type: string
      transactionIsolation:
        type: string
      validationTimeout:
        type: integer
        format: int64
  ConnectionPool:
    type: object
    required:
      - id
      - type
    properties:
      domainKey:
        type: string
      id:
        type: string 
      type:
        type: string
        enum:
          - C3P0
          - DBCP
          - HIKARI
          - TOMCAT
      c3p0Args:
        $ref: "#/definitions/C3P0Args"
      dbcpArgs:
        $ref: "#/definitions/DBCPArgs"
      hikariArgs:
        $ref: "#/definitions/HikariArgs"
      tomcatArgs:
        $ref: "#/definitions/TomcatJDBCArgs"
  DBTemplate:
    type: object
    required:
      - id
      - query
    properties:
      domainKey:
        type: string
      id:
        type: string
      query:
        type: string
  DBTemplateQuery:
    type: object
    required:
      - id
      - pool
    properties:
      id:
        type: string
      pool:
        type: string
      arguments:
        type: string
  DBMultiTemplateQuery:
    type: object
    required:
      - queries
    properties:
      queries:
        type: array
        items:
          $ref: "#/definitions/DBTemplateQuery"
  DBQuery:
    type: object
    required:
      - query
      - pool
    properties:
      query:
        type: string
      pool:
        type: string
  DBMultiQuery:
    type: object
    required:
      - queries
    properties:
      queries:
        type: array
        items:
          $ref: "#/definitions/DBQuery"
  PingResponse:
    type: object
    required:
      - domainKey
      - apiKey
      - userId
      - token
    properties:
      domainKey:
        type: string
      apiKey:
        type: string
      userId:
        type: string
      token:
        type: string
      expireAt:
        type: integer
        format: int64
      roles:
        type: array
        items:
          type: string
  Role:
    type: object
    discriminator: roleType
    required:
      - id
    properties:
      domainKey:
        type: string
      id:
        type: string
      description:
        type: string
  UserRole:
    allOf:
    - $ref: '#/definitions/Role'
    - type: object
      required:
       - 'userId'
      properties:
        userId:
          type: string
  Organization:
    required:
      - id
      - name
    properties:
      domainKey:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      country:
        type: string
      state:
        type: string
      city:
        type: string
      address:
        type: string
      zipcode:
        type: string
      primaryPhone:
        type: string
      email:
        type: string
      locale:
        type: string
      timezone:
        type: string
      registeredStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
  OrganizationUser:
    required:
      - orgId
      - userId
    properties:
      domainKey:
        type: string
      orgId:
        type: integer
        format: int64
      userId:
        type: string
  OrganizationAsset:
    required:
      - orgId
      - assetId
    properties:
      domainKey:
        type: string
      orgId:
        type: integer
        format: int64
      assetId:
        type: string
  OrganizationDevice:
    required:
      - orgId
      - deviceId
    properties:
      domainKey:
        type: string
      orgId:
        type: integer
        format: int64
      deviceId:
        type: string
  OrganizationUserDevice:
    required:
      - orgId
      - userId
      - deviceId
    properties:
      domainKey:
        type: string
      orgId:
        type: integer
        format: int64
      userId:
        type: string
      deviceId:
        type: string
  OrganizationUserAsset:
    required:
      - orgId
      - userId
      - assetId
    properties:
      domainKey:
        type: string
      orgId:
        type: integer
        format: int64
      userId:
        type: string
      assetId:
        type: string
  OrganizationRole:
    allOf:
    - $ref: '#/definitions/Role'
    - type: object
      required:
       - 'orgId'
      properties:
        orgId:
          type: integer
          format: int64
  OrganizationUserRole:
    allOf:
    - $ref: '#/definitions/OrganizationRole'
    - type: object
      required:
       - 'userId'
      properties:
        userId:
          type: string
  OrganizationProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'orgId'
      properties:
        orgId:
          type: integer
          format: int64
  OrganizationUserProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'orgId'
      - 'userId'
      properties:
        orgId:
          type: integer
          format: int64
        userId:
          type: string
  OrganizationDeviceProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'orgId'
      - 'deviceId'
      properties:
        orgId:
          type: integer
          format: int64
        deviceId:
          type: string
  OrganizationAssetProperty:
    allOf:
    - $ref: '#/definitions/Property'
    - type: object
      required:
      - 'orgId'
      - 'assetId'
      properties:
        orgId:
          type: integer
          format: int64
        assetId:
          type: string
  BillingSchedule:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
        format: uuid
      invoicename:
        type: string
      invoicecode:
        type: string
      frequency:
        type: string
      currency:
        type: string
      companyname:
        type: string
      payername:
        type: string
      targetdomain:
        type: string
      updatedtime:
        type: integer
        format: int64
      createdtime:
        type: integer
        format: int64
      discounteditems:
        type: boolean
      enabled:
        type: boolean
      obj:
        type: string
      startdate:
        type: integer
        format: int64
      enddate:
        type: integer
        format: int64
      startevery:
        type: string
      weekday:
        type: integer
        format: int32
      billingtype:
        type: string
      executed:
        type: boolean
  BillingContact:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
        format: uuid
      type:
        type: string
      name:
        type: string
      email:
        type: string
      contact:
        type: string
      address:
        type: string
      city:
        type: string
      state:
        type: string
      country:
        type: string
      zipcode:
        type: string
      logo:
        type: string
      updatedtime:
        type: integer
        format: int64
      createdtime:
        type: integer
        format: int64
      obj:
        type: string
      department:
        type: string
      description:
        type: string
  BillingInvoice:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
        format: uuid
      invoicename:
        type: string
      targetdomain:
        type: string
      invoiceno:
        type: string
      frequency:
        type: string
      file:
        type: string
      grandtotal:
        type: number
        format: double
      startdate:
        type: integer
        format: int64
      enddate:
        type: integer
        format: int64
      createdtime:
        type: integer
        format: int64
      obj:
        type: string
      invoicetype:
        type: string
  BillingTemplate:
    type: object
    properties:
      domainKey:
        type: string
      itemname:
        type: string
      description:
        type: string
      unitprice:
        type: number
        format: double
      tax:
        type: number
        format: float
      templatename:
        type: string
      templatecode:
        type: string
      updatedtime:
        type: integer
        format: int64
      createdtime:
        type: integer
        format: int64
  ApiKey: 
    type: "object"
    required: 
      - "domainKey"
      - "apiKey"
    properties: 
      domainKey: 
        type: "string"
      apiKey: 
        type: "string"
  ContextMethod: 
    type: "object"
    properties: 
      signature: 
        type: "string"
      help: 
        type: "string"
  ContextClass:
    type: object
    required:
      - name
      - methods
    properties:
      name: 
        type: "string"
      methods:
        type: array
        items:
          $ref: "#/definitions/ContextMethod"
  ContextList:
    type: object
    required:
      - classes
    properties:
      classes:
        type: array
        items:
          $ref: "#/definitions/ContextClass"
  Job:
    required:
      - id
      - jobCode
    properties:
      domainKey:
        type: string
      id:
        type: string
      name:
        type: string
      jobType:
        type: string
      jobState:
        type: string
      jobLanguage:
        type: string
      jobCode:
        type: string
      instances:
        type: integer
      startOnBoot:
        type: boolean
      resartOnChange:
        type: boolean
      instanceId:
        type: integer
      nodeId:
        type: string
      nodeConsistentId:
        type: string
      sessionId:
        type: string
  ExportDomainSettings: 
    type: "object"
    properties: 
      apiKey: 
        type: "string"
  ClusterDomains:
    type: object
    required:
      - domains
    properties:
      domains:
        type: array
        items:
          type: string
  GlobalRecordDefinition:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
      name:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/RecordField'
    required:
      - id
      - name
      - fields
  GlobalMessageSpecification:
    type: object
    properties:
      domainKey:
        type: string
      id:
        type: string
      name:
        type: string
      label:
        type: string
      description:
        type: string
      fields:
        type: array
        items:
          $ref: '#/definitions/MessageField'
    required:
      - id
      - name
      - fields
  UserAssetGroup:
    type: object
    required:
      - userId
      - id
      - name
    properties:
      domainKey:
        type: string
      userId:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      extraProps:
        type: object
  UserAssetGroupMember:
    type: object
    required:
      - userId
      - id
      - name
    properties:
      domainKey:
        type: string
      userId:
        type: string
      id:
        type: integer
        format: int64
      assetId:
        type: string
  UserDeviceGroup:
    type: object
    required:
      - userId
      - id
      - name
    properties:
      domainKey:
        type: string
      userId:
        type: string
      id:
        type: integer
        format: int64
      name:
        type: string
      extraProps:
        type: object
  UserDeviceGroupMember:
    type: object
    required:
      - userId
      - id
      - name
    properties:
      domainKey:
        type: string
      userId:
        type: string
      id:
        type: integer
        format: int64
      deviceId:
        type: string
  SensorType:
    type: object
    discriminator: sensorType
    required:
      - id
      - name
      - make
      - model
    properties:
      domainKey:
        type: string
      id:
        type: string
        format: uuid
      name:
        type: string
      make:
        type: string
      model:
        type: string
      registeredStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
  Sensor:
    type: object
    discriminator: sensorObjType
    required:
      - id
      - typeId
    properties:
      domainKey:
        type: string
      id:
        type: string
      typeId:
        type: string
        format: uuid
      name:
        type: string
      make:
        type: string
      model:
        type: string
      registeredStamp:
        type: integer
        format: int64
      updatedStamp:
        type: integer
        format: int64
      reportedStamp:
        type: integer
        format: int64
